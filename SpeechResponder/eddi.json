{
  "name": "EDDI",
  "description": "Version Française communautaire, une base pour vos propres modifications.",
  "scripts": {
    "Blueprint make report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Function to obtain current inventory of a material}\r\n{set _inventory(required) to:\r\n{for material in materials:\r\n{if material.material = required:\r\n{return material}\r\n}\r\n}\r\n}\r\n\r\n{_ Fetch blueprint from state }\r\n{set blueprintname to state.blueprint}\r\n{if blueprintname:\r\n{_ Fetch full blueprint details }\r\n{set blueprint to BlueprintDetails(blueprintname)}\r\n\r\n{_ Context }\r\n{SetState('eddi_context_last_subject', 'blueprint')}\r\n{SetState('eddi_context_blueprint_name', blueprintname)}\r\n}\r\n\r\n{if !blueprint:\r\n{_ Fetch from context }\r\n{set blueprint to BlueprintDetails(state.eddi_context_blueprint_name)}\r\n}\r\n\r\n{set canbemade to 999}\r\n\r\n{if blueprint:\r\n{_ Find the smallest number of this blueprint that can be made }\r\n\r\n{set cur to 0}\r\n{while cur < len(blueprint.materials):\r\n{set inventory to _inventory(blueprint.materials[cur].material)}\r\n{if !inventory:\r\n{set canbemade to 0}\r\n|else:\r\n{if inventory.amount < canbemade:\r\n{set canbemade to inventory.amount}\r\n}\r\n}\r\n{set cur to cur + 1}\r\n}\r\n\r\n{if canbemade = 0:\r\nVous ne pouvez pas faire de {blueprintname}\r\n|elif canbemade = 1:\r\nVous pouvez en faire un {blueprintname}\r\n|else:\r\nVous pouvez faire {canbemade} {blueprintname}\r\n}\r\n|else:\r\nAucune information disponible sur les matériaux requis pour {blueprintname}\r\n}.",
      "default": true,
      "name": "Blueprint make report",
      "description": "Indique le nombre d'un Blueprint que nous pouvons faire"
    },
    "Blueprint material report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch blueprint from state }\r\n{set blueprintname to state.blueprint}\r\n{if blueprintname:\r\n {_ Fetch full blueprint details }\r\n {set blueprint to BlueprintDetails(blueprintname)}\r\n\r\n {_ Context }\r\n {SetState('eddi_context_last_subject', 'blueprint')}\r\n {SetState('eddi_context_blueprint_name', blueprintname)}\r\n}\r\n\r\n{if !blueprint:\r\n {_ Fetch from context }\r\n {set blueprint to BlueprintDetails(state.eddi_context_blueprint_name)}\r\n}\r\n\r\n{if blueprint:\r\n {set materials to len(blueprint.materials)}\r\n {blueprintname} requires\r\n {if materials = 1:\r\n  {blueprint.materials[0].material}\r\n |elif materials = 2:\r\n  {blueprint.materials[0].material} and {blueprint.materials[1].material}\r\n |else:\r\n  {set cur to 0}\r\n  {while cur < len(blueprint.materials):\r\n   {if cur = 0:\r\n    {blueprint.materials[cur].material}\r\n   |elif cur < len(blueprint.materials) - 1:\r\n    , {blueprint.materials[cur].material}\r\n   |else:\r\n    , and {blueprint.materials[cur].material}\r\n   }\r\n   {set cur to cur + 1}\r\n  }\r\n }\r\n|else:\r\n Aucune information disponible sur les matériaux requis pour {blueprintname}\r\n}.",
      "default": true,
      "name": "Blueprint material report",
      "description": "Report on the material requirements for a blueprint"
    },
    "Body report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch from Context }\r\n{set reportbody to BodyDetails(state.eddi_context_body_name, state.eddi_context_body_system)}\r\n\r\n{if !reportbody.name || reportbody.name = \"\":\r\nJe ne sais pas de quelle planète vous demandez des données.\r\n\r\n|else:\r\n\r\n{OneOf(\"{P(reportbody.name)} a\", \"ce corps céleste possède\")}\r\nune gravité de {round(reportbody.gravity, 1)} Gé,\r\nce qui est\r\n{if reportbody.gravity < 0.5:\r\nfaible.\r\n|elif reportbody.gravity <2:\r\nune gravité moyenne.\r\n|elif reportbody.gravity <4:\r\nplutôt élevé.\r\n|else:\r\nune gravité extrème.\r\n}\r\n\r\n{if reportbody.tidallylocked:\r\n{P(reportbody.name)} a une rotation synchrone.\r\n}\r\n\r\n{if reportbody.terraformstate = \"Terraformable\":\r\nCe corps céleste est terraformable.\r\n|elif reportbody.terraformstate = \"Terraformed\":\r\nLa planète est terraformée.\r\n}\r\n\r\n{if len(reportbody.rings) > 0:\r\nIl y a {len(reportbody.rings)} anneau.\r\n}\r\n\r\n{if reportbody.planettype = \"Rocky body\":\r\nC'est un corps rôcheux.\r\n|elif reportbody.planettype = \"High metal content body\":\r\nC'est un corps de type métallique.\r\n|elif reportbody.planettype = \"Earthlike body\":\r\nCette planete est de type tellurique.\r\n|elif reportbody.planettype = \"Metal rich body\":\r\nC'est un monde riche en métaux.\r\n|elif reportbody.planettype = \"Water world\":\r\nC'est un monde composé d'eau.\r\n|elif reportbody.planettype = \"Icy body\":\r\nC'est un corps de glace.\r\n|elif reportbody.planettype = \"Rocky ice body\":\r\nC'est un corps rôcheux recouvert de glace.\r\n|elif reportbody.planettype = \"Rocky ice world\":\r\nC'est un monde rôcheux recouvert de glace.\r\n|elif reportbody.planettype = \"Sudarsky class I gas giant\":\r\nC'est une géante gazeuse de classe un.\r\n|elif reportbody.planettype = \"Sudarsky class II gas giant\":\r\nC'est une géante gazeuse de classe deux.\r\n|elif reportbody.planettype = \"Sudarsky class III gas giant\":\r\nC'est une géante gazeuse de classe trois.\r\n|elif reportbody.planettype = \"Sudarsky class IV gas giant\":\r\nC'est une géante gazeuse de classe quatre.\r\n|elif reportbody.planettype = \"Water giant\":\r\nC'est une géante composée d'eau.\r\n|elif reportbody.planettype = \"Sudarsky class V gas giant\":\r\nC'est une géante gazeuse de classe cinq.\r\n|elif reportbody.planettype = \"Gas giant with water based life\":\r\nC'est une géante gazeuse avec présence de vie basée sur l'eau.\r\n|elif reportbody.planettype = \"Gas giant with ammonia based life\":\r\nC'est une géante gazeuse avec présence de vie basée sur l'ammoniaque.\r\n|elif reportbody.planettype = \"Ammonia world\":\r\nC'est un monde composé d'amoniaque.\r\n|else:\r\nJe ne connais pas encore le type du corps {P(reportbody.planettype)}, merci de penser à me l'intégrer dans ma base après avoir consulté le fichier logue.\r\n}\r\n\r\n{if reportbody.terraformstate = \"Terraforming\":\r\nOn est en plein procéssuss de térraformation.\r\n}\r\n\r\nL'atérissage y est\r\n\r\n{if reportbody.landable:\r\npossible\r\n|else:\r\nimpossible actuellement\r\n}\r\n.\r\n\r\n\r\n\r\n{_ Atmosphere? }\r\n\r\n{_ Volcanism}\r\n{if reportbody.volcanism.type = \"Magma\":\r\nIl y a\r\n{if reportbody.volcanism.amount = Major:\r\n{OneOf(\"de nombreuses\", \"quantité de\", \"beaucoup de\")}\r\n|elif reportbody.volcanism.amount = Minor:\r\n{OneOf(\"quelques\", \"ici et là, des\", \"peu de\")}\r\n}\r\ncoulées de lave de\r\n{set translate to reportbody.volcanism.composition} {F(\"Translate Element\")}\r\nsur la surface.\r\n|elif reportbody.volcanism.type = \"Geysers\":\r\nIl y a\r\n{if reportbody.volcanism.amount = \"Major\":\r\n{OneOf(\"de nombreux\", \"quantités de\", \"beaucoup de\")}\r\n|elif reportbody.volcanism.amount = \"Minor\":\r\n{OneOf(\"quelques\", \"des\", \"peu de\")}\r\n|elif reportbody.volcanism.amount = []:\r\ndes\r\n}\r\n\r\ngésers de {set translate to reportbody.volcanism.composition} {F(\"Translate Element\")},\r\n{OneOf(\"détecté\", \"présent\")} sur la surface.\r\n}\r\n\r\n{if reportbody.landable :\r\nla rotation\r\n{if reportbody.rotationalperiod <= 0.5:\r\nrapide\r\n|elif reportbody.rotationalperiod > 20.0:\r\nlente\r\n}\r\ns'étale sur une période de {round(reportbody.rotationalperiod)} de jours.\r\n\r\n{set goodmaterials to []}\r\n{set greatmaterials to []}\r\n{for material in reportbody.materials:\r\n{if material.percentage >= MaterialDetails(material.material).greatpctbody:\r\n{set greatmaterials to cat(greatmaterials, [material])}\r\n|elif material.percentage >= MaterialDetails(material.material).goodpctbody:\r\n{set goodmaterials to cat(goodmaterials, [material])}\r\n}\r\n}\r\n\r\n{if len(greatmaterials) > 0:\r\nCette planète a une forte concentration de\r\n{if len(greatmaterials) = 1:\r\n{set translate to greatmaterials[0].material} {F(\"Translate Element\")}\r\navec un taux de {round(greatmaterials[0].percentage, 1)} pour cent\r\n|elif len(greatmaterials) = 2:\r\n{set translate to greatmaterials[0].material} {F(\"Translate Element\")}\r\nsoit {round(greatmaterials[0].percentage, 1)} pour cent et\r\n{set translate to greatmaterials[1].material} {F(\"Translate Element\")}\r\navec {round(greatmaterials[1].percentage,1)} pour cent\r\n|else:\r\n{set cur to 0}\r\n{while cur < len(greatmaterials):\r\n{if cur = 0:\r\n{round(greatmaterials[cur].percentage, 1)} pour cent en\r\n{set translate to greatmaterials[cur].material} {F(\"Translate Element\")}\r\n|elif cur < len(greatmaterials) - 1:\r\n, ainsi que {round(greatmaterials[cur].percentage, 1)} pour cent en\r\n{set translate to greatmaterials[cur].material} {F(\"Translate Element\")}\r\n|else:\r\n, et {round(greatmaterials[cur].percentage, 1)} pour cent en\r\n{set translate to greatmaterials[cur].material} {F(\"Translate Element\")}\r\n}\r\n{set cur to cur + 1}\r\n}\r\n}\r\n}\r\n.\r\n{if len(goodmaterials) > 0:\r\n{if len(greatmaterials) > 0:\r\nLes relevés indiquent une valeur de {round(goodmaterials[0].percentage, 1)} pourcent de\r\n|else:\r\nCette planète a de forte concentrations de\r\n}\r\n{set translate to goodmaterials[0].material} {F(\"Translate Element\")}\r\n{if len(goodmaterials) = 1:\r\navec {round(goodmaterials[0].percentage, 1)} pourcent en\r\n{set translate to goodmaterials[0].material} {F(\"Translate Element\")}\r\n|elif len(goodmaterials) = 2:\r\navec des valeurs de {round(goodmaterials[0].percentage, 1)} pourcent en\r\n{set translate to goodmaterials[0].material} {F(\"Translate Element\")}\r\net avec {round(goodmaterials[1].percentage, 1)} pourcent en\r\n{set translate to goodmaterials[1].material} {F(\"Translate Element\")}\r\n|else:\r\n{set cur to 0}\r\n{while cur < len(goodmaterials):\r\n{if cur = 0:\r\navec {round(goodmaterials[cur].percentage, 1)} pourcent en\r\n{set translate to goodmaterials[cur].material} {F(\"Translate Element\")}\r\n|elif cur < len(goodmaterials) - 1:\r\n, ainsi que {round(goodmaterials[cur].percentage, 1)} pourcent\r\n{set translate to goodmaterials[cur].material} {F(\"Translate Element\")}\r\n|else:\r\n, et {round(goodmaterials[cur].percentage, 1)} pourcent en\r\n{set translate to goodmaterials[cur].material} {F(\"Translate Element\")}\r\n}\r\n{set cur to cur + 1}\r\n}\r\n}\r\n}\r\n{if len(greatmaterials) > 0 || len(goodmaterials) > 0:\r\n.\r\n|else:\r\nQuantités des matériaux présents en dessous ou dans la moyenne.\r\n}\r\n\r\n}\r\n}.",
      "default": false,
      "name": "Body report",
      "description": "Function to report on the details of the contextual body"
    },
    "Body scanned": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'body')}\r\n{SetState('eddi_context_last_action', 'scan')}\r\n{SetState('eddi_context_body_system', system.name)}\r\n{SetState('eddi_context_body_name', event.name)}\r\n\r\n{Pause(1000)}\r\n\r\nScan de {P(event.name)} terminé.\r\n\r\n{F(\"Body report\")}\r\n",
      "default": true,
      "name": "Body scanned",
      "description": "Triggered when you complete a scan of a planetary body"
    },
    "Bond awarded": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'bond')}\r\n{SetState('eddi_context_last_action', 'award')}\r\n{SetState('eddi_context_bond_amount', event.reward)}\r\n{SetState('eddi_context_bond_faction', event.awardingfaction)}\r\n\r\n {OneOf('vous recevez','vous aves reçu','arrivée de ')}\r\n {event.reward} \r\n {OneOf('crédits en banque','crédits dans votre compte','crtedits pour vos grands efforts')}.",
      "default": true,
      "name": "Bond awarded",
      "description": "Triggered when you are awarded a combat bond"
    },
    "Bond redeemed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'bond')}\r\n{SetState('eddi_context_last_action', 'redeem')}\r\n{SetState('eddi_context_bond_amount', event.amount)}\r\n\r\nRécompance de combat de {Humanise(event.amount)} crédits encaissé\r\n{Occasionally(2, \"\r\n {if len(event.rewards) = 1:\r\n  par {P(event.rewards[0].faction)}\r\n |else:\r\n  par\r\n  {set cur to 0}\r\n  {while cur < len(event.rewards):\r\n   {if cur = 0:\r\n   |elif cur < len(event.rewards) - 1:\r\n    ,\r\n   |else:\r\n    et\r\n   }\r\n   {P(event.rewards[cur].faction)}\r\n   {set cur to cur + 1}\r\n  }\r\n }\r\n\")}.",
      "default": true,
      "name": "Bond redeemed",
      "description": "Triggered when you redeem a combat bond"
    },
    "Bounty awarded": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'bounty')}\r\n{SetState('eddi_context_last_action', 'award')}\r\n{SetState('eddi_context_bounty_name', event.target)}\r\n{SetState('eddi_context_bounty_faction', event.faction)}\r\n{SetState('eddi_context_bounty_amount', event.reward)}\r\n\r\n{Pause(500)}\r\n{if len(event.rewards) = 1:\r\n Récompense de {Humanise(event.reward)} crédits reçu par {P(event.rewards[0].faction)}\r\n|elif len(event.rewards) > 1:\r\n {len(event.rewards)} Reçu un total de {Humanise(event.reward)} crédits comme récompense\r\n}\r\n{if event.shared:\r\n à partager avec vos compagnons de vol\r\n}.",
      "default": true,
      "name": "Bounty awarded",
      "description": "Triggered when you are awarded a bounty"
    },
    "Bounty incurred": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'bounty')}\r\n{SetState('eddi_context_last_action', 'incur')}\r\n{SetState('eddi_context_bounty_name', event.victim)}\r\n{SetState('eddi_context_bounty_faction', event.faction)}\r\n{SetState('eddi_context_bounty_amount', event.bounty)}\r\n\r\n\r\n{P(event.faction)} vous recherche, votre tête est mise à pris pour {event.bounty} crédits.",
      "default": true,
      "name": "Bounty incurred",
      "description": "Triggered when you incur a bounty"
    },
    "Bounty redeemed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'bounty')}\r\n{SetState('eddi_context_last_action', 'redeem')}\r\n{SetState('eddi_context_bounty_amount', event.amount)}\r\n\r\n\r\nLes primes récoltés vous raportent {Humanise(event.amount)} de crédits \r\n\r\n{Occasionally(2, \"\r\n{if len(event.rewards) = 1:\r\n     de la part de{P(event.rewards[0].faction)}\r\n|else:\r\n    par\r\n   {set cur to 0}\r\n   {while cur < len(event.rewards):\r\n      {if cur = 0:\r\n      |elif cur < len(event.rewards) - 1:\r\n         ,\r\n      |else:\r\n         et\r\n      }\r\n   {P(event.rewards[cur].faction)}\r\n   {set cur to cur + 1}\r\n   }\r\n}\r\n\")}.",
      "default": true,
      "name": "Bounty redeemed",
      "description": "Triggered when you redeem a bounty voucher"
    },
    "Cargo inventory": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Cargo inventory",
      "description": "Triggered when you obtain an inventory of your cargo"
    },
    "Cleared save": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'save')}\r\n{SetState('eddi_context_last_action', 'clear')}\r\n\r\nAu revoir {F(\"Honorific\")}. Ce fut un plaisir de vous servir.",
      "default": true,
      "name": "Cleared save",
      "description": "Triggered when you clear your save"
    },
    "Cockpit breached": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{_SetState('eddi_context_last_subject', 'cockpit')}\r\n{_SetState('eddi_context_last_action', 'breach')}\r\n\r\nAlairt !!{OneOf('Rupture dans le cockpit.','Intégrité du cockpit compromise.','Le cockpit est atteint.')}\r\n\r\n{Occasionally(3,'jespère que vous savez où est votre casque!')}.",
      "default": false,
      "name": "Cockpit breached",
      "description": "Triggered when your ship's cockpit is broken"
    },
    "Combat promotion": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'rank')}\r\n{SetState('eddi_context_last_action', 'promotion')}\r\n{SetState('eddi_context_rank_name', 'combat')}\r\n{SetState('eddi_context_rank_amount', event.rating)}\r\n\r\n{OneOf(\"Vos compétences au combat sont reconnues dans toute la galaxie. Vous êtes prommu au rang de \",\"Vous êtes reconnu pour vos compétences au combat, vous accédez au grade de\",\"Permettez moi de vous féliciter pour votre promotion. Vous êtes \")} {F(\"Honorific\")}.",
      "default": false,
      "name": "Combat promotion",
      "description": "Triggered when your combat rank increases"
    },
    "Commander continued": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Bienvenue\",\"Bonjour\",\"Je suis heureux de vous revoir\")} {F(\"Honorific\")}.",
      "default": true,
      "name": "Commander continued",
      "description": "Triggered when you continue an existing game"
    },
    "Commander progress": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Commander progress",
      "description": "Triggered when your progress is reported"
    },
    "Commander ratings": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Commander ratings",
      "description": "Triggered when your ratings are reported"
    },
    "Commander started": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Bienvenu, Commandeur.",
      "default": true,
      "name": "Commander started",
      "description": "Triggered when you start a new game"
    },
    "Commodity collected": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'commodity')}\r\n{SetState('eddi_context_last_action', 'collect')}\r\n{SetState('eddi_context_cargo_name', event.commodity)}\r\n\r\n\r\n\r\n{set translate to event.commodity} {F(\"Translate Commodities\")}, {OneOf(\"à bord\",\"viens d'être chargé.\",\"est arimée dans la soute\")}.",
      "default": false,
      "name": "Commodity collected",
      "description": "Triggered when you pick up a commodity in your ship or SRV"
    },
    "Commodity ejected": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'commodity')}\r\n{SetState('eddi_context_last_action', 'eject')}\r\n{SetState('eddi_context_commodity_name', event.commodity)}\r\n\r\n{set translate to event.commodity} {F(\"Translate Commodities\")} {OneOf(\"éjecté\",\"renvoyé de la soute\")}.",
      "default": true,
      "name": "Commodity ejected",
      "description": "Triggered when you eject a commodity from your ship or SRV"
    },
    "Commodity purchase check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{for commodity in station.commodities:\r\n{if commodity.stock > 0 && commodity.buyprice < commodity.avgprice:\r\n{set discount to commodity.avgprice - commodity.buyprice}\r\n{if discount > best.avgprice - best.buyprice:\r\n{set thirdbest to secondbest}\r\n{set secondbest to best}\r\n{set best to commodity}\r\n|elif discount > secondbest.avgprice - secondbest.buyprice:\r\n{set thirdbest to secondbest}\r\n{set secondbest to commodity}\r\n|elif discount > thirdbest.avgprice - thirdbest.buyprice:\r\n{set thirdbest to commodity}\r\n}\r\n}\r\n}\r\n\r\n{if best:\r\nLe marché local vend les {set translate to best.name} {F(\"Translate Commodities\")} à un bon prix\r\n{if secondbest\r\n, ainsi que les {set translate to secondbest.name} {F(\"Translate Commodities\")}\r\n{if thirdbest:\r\net les {set translate to thirdbest.name} {F(\"Translate Commodities\")}\r\n}\r\n}\r\n.}",
      "default": false,
      "name": "Commodity purchase check",
      "description": "Check to see which commodities are the best to purchase"
    },
    "Commodity purchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'commodity')}\r\n{SetState('eddi_context_last_action', 'purchase')}\r\n{SetState('eddi_context_commodity_name', event.commodity)}\r\n{SetState('eddi_context_commodity_amount', event.amount)}\r\n\r\n{if event.amount = 1:\r\nVous venez d'acheter une unitée de {set translate to event.commodity} {F(\"Translate Commodities\")} pour {event.price} crédits.\r\n|elif event.amount > 1:\r\nVous venez d'acheter {event.amount} unitées de {set translate to event.commodity} {F(\"Translate Commodities\")} pour un cout de {event.price} crédits l'unité. Le coût total est donc de {event.amount * event.price} crédits.\r\n}\r\n\r\n",
      "default": true,
      "name": "Commodity purchased",
      "description": "Triggered when you buy a commodity from the markets"
    },
    "Commodity refined": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'commodity')}\r\n{SetState('eddi_context_last_action', 'refine')}\r\n{SetState('eddi_context_commodity_name', event.commodity)}\r\n\r\n\r\nUne {OneOf('unité','tonne')} de minerai {set translate to event.commodity} {F(\"Translate Commodities\")} a été raffiné.",
      "default": true,
      "name": "Commodity refined",
      "description": "Triggered when you refine a commodity from the refinery"
    },
    "Commodity sale check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Function to find a given commodity in market}\r\n{set market(commodity) to:\r\n {for marketcommodity in station.commodities:\r\n  {if marketcommodity.EDDBID = commodity.EDDBID:\r\n   {return marketcommodity}\r\n  }\r\n }\r\n}\r\n\r\n{set totalprofit to 0}\r\n{set profitablecommodities to []}\r\n{set stolencommodities to []}\r\n{set unknowncommodities to []}\r\n\r\n{for cargo in ship.cargo:\r\n {if cargo.commodity.name != 'Limpet':\r\n  {set marketcommodity to market(cargo.commodity)}\r\n  {if !marketcommodity:\r\n   {_ We have no market information for this commodity. Add it to the list of unknowns}\r\n   Aucune information à propos de ce produit dans le marché. Ajoutez le à la liste des inconnus\r\n   {set unknowncommodities to cat(unknowncommodities, [cargo.commodity])}\r\n  }\r\n  {set profit to (marketcommodity.sellprice - cargo.price) * cargo.amount}\r\n  {if cargo.stolen = true:\r\n   {set stolencommodities to cat(stolencommodities, [cargo.commodity])}\r\n  |elif cargo.missionid:\r\n   {_ do not do anything with mission cargo at the moment }\r\n   Nous n'avons pas de mission de transport de matière actuellement\r\n  |elif marketcommodity && profit > 0:\r\n   {set profitablecommodities to cat(profitablecommodities, [cargo.commodity])}\r\n   {set totalprofit to totalprofit + profit}\r\n  } \r\n }\r\n}\r\n\r\n{_ Let the user know about any commodities they can sell here for a profit}\r\n{if len(profitablecommodities) > 0:\r\n Vous pouvez vendre vos\r\n {if len(profitablecommodities) = 1:\r\n  {set translate to profitablecommodities[0].name} {F(\"Translate Commodities\")}\r\n |elif len(profitablecommodities) = 2:\r\n  {set translate to profitablecommodities[0].name} {F(\"Translate Commodities\")} et {set translate to profitablecommodities[1].name} {F(\"Translate Commodities\")}\r\n |else:\r\n  {set cur to 0}\r\n  {while cur < len(profitablecommodities):\r\n   {if cur = 0:\r\n    {set translate to profitablecommodities[cur].name} {F(\"Translate Commodities\")}\r\n   |elif cur < len(profitablecommodities) - 1:\r\n    , {set translate to profitablecommodities[cur].name} {F(\"Translate Commodities\")}\r\n   |else:\r\n    , et {set translate to profitablecommodities[cur].name} {F(\"Translate Commodities\")}\r\n   }\r\n   {set cur to cur + 1}\r\n  }\r\n }\r\n pour un profit de {totalprofit} crédits.\r\n}\r\n\r\n{_ Let the user know about any commodities about which we are unsure if they can sell for a profit}\r\n{if len(unknowncommodities) > 0:\r\n Vous pourriez {if len(profitablecommodities) > 0: aussi } vendre vos\r\n {if len(unknowncommodities) = 1:\r\n  {set translate to unknowncommodities[0].name} {F(\"Translate Commodities\")}\r\n |elif len(unknowncommodities) = 2:\r\n  {set translate to unknowncommodities[0].name} {F(\"Translate Commodities\")} et {set translate to unknowncommodities[1].name} {F(\"Translate Commodities\")}.\r\n |else:\r\n  {set cur to 0}\r\n {while cur < len(unknowncommodities):\r\n  {if cur = 0:\r\n   {set translate to unknowncommodities[cur].name} {F(\"Translate Commodities\")}\r\n  |elif cur < len(profitablecommodities) - 1:\r\n   , {set translate to unknowncommodities[cur].name} {F(\"Translate Commodities\")}\r\n  |else:\r\n   , et {set translate to unknowncommodities[cur].name} {F(\"Translate Commodities\")}\r\n  }\r\n  {set cur to cur + 1}\r\n }\r\n}. \r\n\r\nTestez aussi les profits potentiels pour\r\n{if len(unknowncommodities) > 1: tout cela\r\n|else: ceci} avant de clore vos transactions.\r\n}\r\n\r\n{_ Let the user know about any stolen commodities they can sell on the black market}\r\n{if len(stolencommodities) > 0:\r\n {if station.hasblackmarket:\r\n  Vous pouvez {OneOf('vous débarasser', 'brader', 'vous séparer')} de vos marchandises volées\r\n  {if len(stolencommodities) = 1:\r\n   {set translate to stolencommodities[0].name} {F(\"Translate Commodities\")}\r\n  |elif len(stolencommodities) = 2:\r\n   {set translate to stolencommodities[0].name} {F(\"Translate Commodities\")} et\r\n   {set translate to stolencommodities[1].name} {F(\"Translate Commodities\")}\r\n  |else:\r\n   {set cur to 0}\r\n   {while cur < len(stolencommodities):\r\n    {if cur = 0:\r\n     {set translate to stolencommodities[cur].name} {F(\"Translate Commodities\")}\r\n    |elif cur < len(stolencommodities) - 1:\r\n     {set translate to stolencommodities[cur].name} {F(\"Translate Commodities\")}\r\n    |else:\r\n     et {set translate to stolencommodities[cur].name} {F(\"Translate Commodities\")}\r\n    }\r\n   {set cur to cur + 1}\r\n   }\r\n  }\r\n sur le marché noir.\r\n |else:\r\n  N'oubliez pas que vous {OneOf(\"avez une cargaison volée en soute\", \"avez des biens volés à bord\", \"transportez des marchandises volées\", \"transportez une cargaison volée\")}.\r\n }\r\n}\r\n",
      "default": false,
      "name": "Commodity sale check",
      "description": "Check to see which commodities can be sold here"
    },
    "Commodity sold": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'commodity')}\r\n{SetState('eddi_context_last_action', 'sell')}\r\n{SetState('eddi_context_commodity_name', event.commodity)}\r\n{SetState('eddi_context_commodity_amount', event.amount)}\r\n\r\n{if event.amount = 1:\r\nVous venez de vendre une unité de {set translate to event.commodity} {F(\"Translate Commodities\")}  pour {event.price} crédits\r\n|elif event.amount > 1:\r\nVous venez de vendre {event.amount} unités de {set translate to event.commodity} {F(\"Translate Commodities\")}  à {event.price} crédits par l'unité. La valeur totale est de {event.amount * event.price} crédits\r\n}\r\n{if event.profit < 0:\r\navec une perte de {-1 * event.profit * event.amount} crédits.\r\n|elif event.profit = 0:\r\nvous n'avez pas fait de profit, vous avez revendu au prix d'achat.\r\n|else:\r\navec un profit de {event.profit * event.amount} crédits.\r\n}",
      "default": true,
      "name": "Commodity sold",
      "description": "Triggered when you sell a commodity to the markets"
    },
    "Controlling fighter": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"liaison radio\", \"liaison\", \"contact\")} {Occasionally(2, \"avec le chasseur\")} {OneOf(\"initialisée\", \"établie\", \"activé\")}.",
      "default": true,
      "name": "Controlling fighter",
      "description": "Triggered when you switch control from your ship to your fighter"
    },
    "Controlling ship": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Contact\", \"Liaison\", \"Liaison radio\")} avec le chasseur {OneOf(\"terminé.\", \"fermé.\")}.",
      "default": false,
      "name": "Controlling ship",
      "description": "Triggered when you switch control from your fighter to your ship"
    },
    "Convertir en Celsius": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ set convertir to 0}\r\n\r\n\r\n{set Convertion to (convertir -273.15)}\r\n\r\n{if Convertion: {Convertion} |else: {convertir}}\r\n\r\n",
      "default": true,
      "name": "Convertir en Celsius",
      "description": "convertir les kevin en celsius"
    },
    "Crew assigned": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.role = \"Active\":\r\n{event.name} Est maintenant en service actif.\r\n|else:\r\n{event.name} Viens de démissionner de son poste.\r\n}",
      "default": true,
      "name": "Crew assigned",
      "description": "Triggered when you assign crew"
    },
    "Crew fired": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.name} ne fait plus parti du personnel.",
      "default": true,
      "name": "Crew fired",
      "description": "Triggered when you fire crew"
    },
    "Crew hired": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.name} à rejoint le service pour sa faction.",
      "default": true,
      "name": "Crew hired",
      "description": "Triggered when you hire crew"
    },
    "Crew joined": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'join')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n\r\n{event.crew} a rejoint votre équipe.",
      "default": false,
      "name": "Crew joined",
      "description": "Triggered when you join a crew"
    },
    "Crew left": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'leave')}\r\n{SetState('eddi_context_crew_name', event.captain)}\r\n\r\nVous avez quitté l'équipe de {event.captain}.",
      "default": true,
      "name": "Crew left",
      "description": "Triggered when you leave a crew"
    },
    "Crew member joined": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'join')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n\r\n{event.crew} has joined your crew.",
      "default": true,
      "name": "Crew member joined",
      "description": "Triggered when a commander joins your crew"
    },
    "Crew member launched": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'launch')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n\r\n{event.crew} fait décoller le chasseur.",
      "default": false,
      "name": "Crew member launched",
      "description": "Triggered when a crew member launches the fighter"
    },
    "Crew member left": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'leave')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n\r\n{event.crew} viens de quitter l'équipe.",
      "default": true,
      "name": "Crew member left",
      "description": "Triggered when a commander leaves your crew"
    },
    "Crew member removed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'remove')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n\r\nVous avez sorti {event.crew} de votre équipe.",
      "default": true,
      "name": "Crew member removed",
      "description": "Triggered when you remove a commander from your crew"
    },
    "Crew member role changed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'crew')}\r\n{SetState('eddi_context_last_action', 'role')}\r\n{SetState('eddi_context_crew_name', event.crew)}\r\n{SetState('eddi_context_crew_role', event.role)}\r\n\r\n{if event.role = 'Idle':\r\n    {event.crew} is no longer manning a position\r\n|elif event.role = 'Fighter':\r\n    {event.crew} is now manning the fighter\r\n|elif event.role = 'Gunner':\r\n    {event.crew} is now manning the guns\r\n}.\r\n",
      "default": true,
      "name": "Crew member role change",
      "description": "Triggered when a crew member changes their role"
    },
    "Crew role changed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.role = 'Gunner':\r\nVous êtes maintenant l'artilleur de cette équipe.\r\n|elif event.role = 'Fighter':\r\nVous êtes maintenant le pilote de chasse de cette équipe.\r\n|elif event.role = 'Idle':\r\nVous n'avez pas été affecté au service actif.\r\n}",
      "default": true,
      "name": "Crew role changed",
      "description": "Triggered when your role in the crew changes"
    },
    "Damage check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Track if there is any damage}\r\n{set damaged to 0}\r\n\r\n{_ Announce hull health}\r\n{if ship.health < 100:\r\n Coque à {Humanise(ship.health)}pourcent.\r\n {set damaged to 1}\r\n}\r\n\r\n{_ en premier la liste des modules critiques}\r\n\r\n{set minordamage to []}\r\n{set majordamage to []}\r\n\r\n{if ship.powerplant.health < 60:\r\n {set majordamage to cat(majordamage, [ship.powerplant])}\r\n|elif ship.powerplant.health < 100:\r\n {set minordamage to cat(minordamage, [ship.powerplant])}\r\n}\r\n\r\n{if ship.thrusters.health < 60:\r\n {set majordamage to cat(majordamage, [ship.thrusters])}\r\n|elif ship.thrusters.health < 100:\r\n {set minordamage to cat(minordamage, [ship.thrusters])}\r\n}\r\n\r\n{if ship.frameshiftdrive.health < 60:\r\n {set majordamage to cat(majordamage, [ship.frameshiftdrive])}\r\n|elif ship.frameshiftdrive.health < 100:\r\n {set minordamage to cat(minordamage, [ship.frameshiftdrive])}\r\n}\r\n\r\n{if ship.powerdistributor.health < 60:\r\n {set majordamage to cat(majordamage, [ship.powerdistributor])}\r\n|elif ship.powerdistributor.health < 100:\r\n {set minordamage to cat(minordamage, [ship.powerdistributor])}\r\n}\r\n\r\n{if ship.lifesupport.health < 60:\r\n {set majordamage to cat(majordamage, [ship.lifesupport])}\r\n|elif ship.lifesupport.health < 100:\r\n {set minordamage to cat(minordamage, [ship.lifesupport])}\r\n}\r\n\r\n{if ship.sensors.health < 60:\r\n {set majordamage to cat(majordamage, [ship.sensors])}\r\n|elif ship.sensors.health < 100:\r\n {set minordamage to cat(minordamage, [ship.sensors])}\r\n}\r\n\r\n{if len(majordamage) > 0:\r\n {set damaged to 1}\r\n Dégats critiques sur\r\n {if len(majordamage) = 1:\r\n  {set translate to majordamage[0].name} {F(\"Translate Modules\")}\r\n |elif len(majordamage) = 2:\r\n  {set translate to majordamage[0].name} {F(\"Translate Modules\")} et {set translate to majordamage[1].name} {F(\"Translate Modules\")}\r\n |else:\r\n  {set cur to 0}\r\n  {while cur < len(majordamage):\r\n   {if cur = 0:\r\n    {set translate to majordamage[cur].name} {F(\"Translate Modules\")}\r\n   |elif cur < len(majordamage) - 1:\r\n    , {set translate to majordamage[cur].name} {F(\"Translate Modules\")}\r\n   |else:\r\n    ,et {set translate to majordamage[cur].name} {F(\"Translate Modules\")}\r\n   {set cur to cur + 1}\r\n   }\r\n  }.\r\n }\r\n}\r\n\r\n{if len(minordamage) > 0:\r\n {set damaged to 1}\r\n Dégât minime\r\n {if len(minordamage) = 1:\r\n  {set translate to minordamage[0].name} {F(\"Translate Modules\")}\r\n |elif len(minordamage) = 2:\r\n  {set translate to minordamage[0].name} {F(\"Translate Modules\")} et {set translate to minordamage[1].name} {F(\"Translate Modules\")}\r\n |else:\r\n  {set cur to 0}\r\n  {while cur < len(minordamage):\r\n   {if cur = 0:\r\n    {set translate to minordamage[cur].name} {F(\"Translate Modules\")}\r\n   |elif cur < len(minordamage) - 1:\r\n    , {set translate to minordamage[cur].name} {F(\"Translate Modules\")}\r\n   |else:\r\n    ,et  {set translate to minordamage[cur].name} {F(\"Translate Modules\")}\r\n   }\r\n   {set cur to cur + 1}\r\n  }\r\n }.\r\n}\r\n\r\n\r\n{_ liste des modules secaondaires}\r\n\r\n{set minordamage to []}\r\n{set majordamage to []}\r\n\r\n\r\n{for compartment in ship.compartments:\r\n {if compartment.module.health < 60:\r\n  {set majordamage to cat(majordamage, [compartment.module.name])}\r\n |elif hardpoint.module.health < 100:\r\n  {set minordamage to cat(minordamage, [compartment.module.name])}\r\n }\r\n}\r\n\r\n{for hardpoint in ship.hardpoints:\r\n {if hardpoint.module.health < 60:\r\n  {set majordamage to cat(majordamage, [hardpoint.module.name])}\r\n |elif hardpoint.module.health < 100:\r\n  {set minordamage to cat(minordamage, [hardpiont.module.name])}\r\n }\r\n}\r\n\r\n{if len(majordamage) > 0:\r\n{set damaged to 1}\r\n {if len(majordamage) = 1:\r\n  Un autre élément du vaisseau avec des dégâts majeurs\r\n |elif len(majordamage) > 1:\r\n  {len(majordamage)} autres élément du vaisseau avec des dégâts majeurs\r\n }\r\n {if len(minordamage) = 1:\r\n  et un autre élément du vaisseau avec des dégâts mineurs\r\n |elif len(minordamage) > 1:\r\n  et {len(minordamage)} autres élément du vaisseau avec des dégâts mineurs\r\n }.\r\n|elif len(minordamage) = 1:\r\n  {set damaged to 1}\r\n Un autre élément du vaisseau avec des dégâts mineurs.\r\n|elif len(minordamage) > 1:\r\n {set damaged to 1}\r\n {len(minordamage)} autres éléments du navire avec des dommages mineurs.\r\n}\r\n\r\n{if damaged = 0:\r\n {OneOf(\"Tout les système sont pleinement opérationel.\", \"{ShipName()} est pleinement opérationel.\", \"{ShipName()} est en bon état.\")}\r\n}\r\n",
      "default": true,
      "name": "Damage check",
      "description": "Check on the levels of damage to your ship"
    },
    "Data voucher redeemed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'data_voucher')}\r\n{SetState('eddi_context_last_action', 'redeem')}\r\n{SetState('eddi_context_data_voucher_amount', event.amount)}\r\n\r\nRécompance de {Humanise(event.amount)} crédits pour les donnée transmises\r\n{Occasionally(2, \"\r\n{if len(event.rewards) = 1:\r\nà {P(event.rewards[0].faction)}\r\n|else:\r\nà\r\n{set cur to 0}\r\n{while cur < len(event.rewards):\r\n{if cur = 0:\r\n|elif cur < len(event.rewards) - 1:\r\n,\r\n|else:\r\net\r\n}\r\n{P(event.rewards[cur].faction)}\r\n{set cur to cur + 1}\r\n}\r\n}\r\n\")}.",
      "default": true,
      "name": "Data voucher redeemed",
      "description": "Triggered when you redeem a data voucher"
    },
    "Died": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Died",
      "description": "Triggered when you have died"
    },
    "Docked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Pause(2000)}\r\n\r\n{_ Find out in advance what we have to say }\r\n{if ship.role = \"Multi-purpose\" || ship.role = \"Trading\":\r\n{set purchasecheck to F(\"Commodity purchase check\")}\r\n}\r\n{set limpetcheck to F(\"Limpet check\")}\r\n{set swapoutcheck to F(\"Swapout check\")}\r\n{set salecheck to F(\"Commodity sale check\")}\r\n\r\n{if purchasecheck || salecheck || limpetcheck || swapoutcheck:\r\n{OneOf(\"Établissement d'une liaison avec\",\r\n\"Contact établi avec\",\r\n\"Connection avec\",\r\n\"Accès avec\")}\r\n{OneOf(\"le réseau informatique\", \"le réseau\", \"les réseaux\", \" les ordinateurs\", \"les services\")}.\r\n{OneOf(\"de la base\", \"de la station\", \"de {event.station}\")}\r\n\r\n{Pause(10000)}\r\n{OneOf(\"Début de liaison\", \"Liaison\", \"Accès\", \"Connection\")} {OneOf(\"établi\", \"confirmé\", \"obtenue\", \"autorisé\")}.\r\n{salecheck}\r\n{purchasecheck}\r\n{swapoutcheck}\r\n{limpetcheck}\r\n|else:\r\n{OneOf(\"Communications avec\", \"Contact avec\", \"Liaison avec\", \"accès avec\")}\r\n{OneOf(\"le réseau informatique\", \"le réseau\", \"les réseaux\", \" les ordinateurs\", \"le service\")}\r\n{OneOf(\"de la base\", \"de la station\", \"de {event.station}\")}\r\n\r\n{OneOf(\"établi\", \"confirmé\", \"obtenue\", \"autorisé\")}.\r\n}",
      "default": true,
      "name": "Docked",
      "description": "Triggered when your ship docks at a station or outpost"
    },
    "Docking cancelled": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Procédure dappontage annulée.",
      "default": true,
      "name": "Docking cancelled",
      "description": "Triggered when your ship cancels a docking request at a station or outpost"
    },
    "Docking denied": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Pause(2000)}\r\n\r\nNous avons un refus d'appontage\r\n\r\n{if event.reason = \"ActiveFighter\":\r\n     Car nos armes sont déployées\r\n|elif event.reason = \"Distance\":\r\n     Parce que nous sommes trop loin de la station\r\n|elif event.reason = \"Hostile\":\r\n     Parce que la sation est sous le contôle d'une faction qui ne veut pas de nous\r\n|elif event.reason = \"NoSpace\":\r\n     Parce que tous les pads d'atterrissage sont occupés\r\n|elif event.reason = \"Offences\":\r\n     Parce que nous avons récemment commis un crime contre eux!... non? sans blague?\r\n|elif event.reason = \"TooLarge\":\r\n     Parce qu'il n'y a aucune zone d'atterrissage assez grande pour notre vaisseau\r\n}.",
      "default": true,
      "name": "Docking denied",
      "description": "Triggered when your ship is denied docking at a station or outpost"
    },
    "Docking granted": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'landing pad')}\r\n{SetState('eddi_context_landing_pad_system', system.name)}\r\n{SetState('eddi_context_landing_pad_station', event.station)}\r\n{SetState('eddi_context_landing_pad_pad', event.landingpad)}\r\n\r\n{set station to StationDetails(event.station)}\r\n{set landingpad to state.eddi_context_landing_pad_pad}\r\n{if station.model = \"Coriolis Starport\" || station.model = \"Orbis Starport\" || station.model = \"Ocellus Starport\" || station.model = \"Unknown Starport\":\r\n    {Pause(8000)}\r\n    {F(\"Landing pad report\")}\r\n|else : Votre plate forme dattérissage a le numéro {landingpad} \r\n        \r\n}\r\n",
      "default": true,
      "name": "Docking granted",
      "description": "Triggered when your ship is granted docking permission at a station or outpost"
    },
    "Docking requested": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Docking requested",
      "description": "Triggered when your ship requests docking at a station or outpost"
    },
    "Docking timed out": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Pas de réponse à la demande dappontage.",
      "default": true,
      "name": "Docking timed out",
      "description": "Triggered when your docking request times out"
    },
    "Engineer progressed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.engineer} vous permet daccéder aux {OneOf('plans', 'technologies','modifications','améliorations')} de grade {event.rank}.",
      "default": true,
      "name": "Engineer progressed",
      "description": "Triggered when you reach a new rank with an engineer"
    },
    "Entered CQC": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Entrée dans l'arène de combat",
      "default": false,
      "name": "Entered CQC",
      "description": "Triggered when you enter CQC"
    },
    "Entered normal space": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Pause(5000)}\r\n\r\n{OneOf(\"{ShipName()} est\", \"\")} {OneOf(\"entré\", \"revenu\", \"passé\")} en espace normal\r\n\r\n{if event.bodytype = 'Planet':\r\n{OneOf(\"proche de\", \"à cotés de\", \"dans les environs de\")} la planète {P(event.body)}\r\n|elif event.bodytype = 'Star':\r\n{OneOf(\"proche de\", \"à cotés de\", \"dans les environs de\")} l'étoile {P(event.body)}\r\n|elif event.bodytype = 'Station':\r\n{OneOf(\"proche de\", \"à cotés de\", \"dans les environs de\")} {P(event.body)}\r\n}.",
      "default": false,
      "name": "Entered normal space",
      "description": "Triggered when your ship enters normal space"
    },
    "Entered signal source": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Pause(2000)}\r\n\r\n{if event.threat < 2:\r\nZône à priori sécure et proche de la source de signal.\r\n|elif event.threat = 2:\r\nAttention, menace moyenne dans la zône du signal.\r\n|elif event.threat = 3:\r\nDanger!! forte menace dans la zone du signal.\r\n|else:\r\nAlerte! Vous entrez dans un espace à très haut risque.\r\n}",
      "default": false,
      "name": "Entered signal source",
      "description": "Triggered when your ship enters a signal source"
    },
    "Entered supercruise": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Pause(1000)}\r\n\r\n{OneOf(\"{ShipName()} entre en \",\"{ShipName()} passe en \",\"Activation de la \",\"{ShipName()} accélère en \", \"Transition vers la \", \"\", \"\", \"\")} Vitesse de croisière.",
      "default": false,
      "name": "Entered supercruise",
      "description": "Triggered when your ship enters supercruise"
    },
    "Exploration data purchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"achat de donnée {OneOf('système', 'dexploration')} pour {P(event.system)}\",\r\n\"données {OneOf('système', 'dexploration')} pour {P(event.system)} à présent disponible\",\r\n\"{Occasionally(3, '{ShipName()} a')} reçu des données {OneOf('système', 'dexploration')} pour {P(event.system)} des services de la station\",\r\n\"Réception de données {OneOf('système', 'dexploration')} concernant {P(event.system)} confirmé\")}.",
      "default": false,
      "name": "Exploration data purchased",
      "description": "Triggered when you purchase exploration data"
    },
    "Exploration data sold": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Données d'exploration de {len(event.systems)} systèmes vendus pour {Humanise(event.reward)} crédits\r\n\r\n{if len(event.firsts) > 0:\r\n    , avec un bonus de {Humanise(event.bonus)} crédits pour\r\n    {if len(event.firsts) = 1:\r\n        une primodécouverte\r\n    |else:\r\n        {len(event.firsts)} primo découvertes\r\n    }\r\n}\r\n.",
      "default": true,
      "name": "Exploration data sold",
      "description": "Triggered when you sell exploration data"
    },
    "Exploration promotion": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'rank')}\r\n{SetState('eddi_context_last_action', 'promotion')}\r\n{SetState('eddi_context_rank_name', 'combat')}\r\n{SetState('eddi_context_rank_amount', event.rating)}\r\n\r\n{OneOf(\"A l'instar de ce grand philosophe explorateur, je veux dire le capitaine Keurk, votre attraction vers l'inconnu au péril de votre vie\",\"Votre penchant pour l'inconnu\",\"Les différentes routes que vous avez ouvertes dans la galaxie\",\"L'ensemble de vos découvertes\")} vous ont ammené au titre de {F(\"Honorific\")}. Je vous félicite!",
      "default": false,
      "name": "Exploration promotion",
      "description": "Triggered when your exploration rank increases"
    },
    "Fighter docked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Le chasseur {OneOf(\"a apponté\",\"est arrimé\")} {Occasionally(2,'{OneOf(\"à votre vaisseau\",\"à son vaisseau mère\")}')}.",
      "default": true,
      "name": "Fighter docked",
      "description": "Triggered when you dock a fighter with your ship"
    },
    "Fighter launched": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Chasseur {OneOf(\"largué\",\"déployé\")} {Occasionally(2,'{OneOf(\"de votre vaisseau\",\"de son vaisseau mère\",\"et paré au combat\")}')}",
      "default": true,
      "name": "Fighter launched",
      "description": "Triggered when you launch a fighter from your ship"
    },
    "File Header": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "File Header",
      "description": "Triggered when the file header is read"
    },
    "Fine incurred": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'fine')}\r\n{SetState('eddi_context_last_action', 'incur')}\r\n{SetState('eddi_context_fine_name', event.victim)}\r\n{SetState('eddi_context_fine_faction', event.faction)}\r\n{SetState('eddi_context_fine_amount', event.fine)}\r\n\r\nVous devez à {P(event.faction)} {Humanise(event.fine)} credits pour ça.",
      "default": true,
      "name": "Fine incurred",
      "description": "Triggered when your incur a fine"
    },
    "Fine paid": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'fine')}\r\n{SetState('eddi_context_last_action', 'pay')}\r\n{SetState('eddi_context_fine_amount', event.amount)}\r\n\r\n\r\n{OneOf (\"lamende\",\"Le P V\")} de  {Humanise(event.amount)} crédits est payée.",
      "default": true,
      "name": "Fine paid",
      "description": "Triggered when you pay a fine"
    },
    "Friends status": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Friends status",
      "description": "Triggered when a friendly commander changes status"
    },
    "FSD engaged": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n\r\n{set AncienSystem to (system)}\r\n\r\n{SetState('eddi_context_last_subject', 'fsd')}\r\n{SetState('eddi_context_last_action', 'engage')}\r\n{SetState('eddi_context_system_name', event.system)}\r\n{SetState('eddi_context_system_system', event.system)}\r\n\r\n\r\n{if event.target = 'Hyperspace':\r\n{_ Rewrite context to represent a jump }\r\n{SetState('eddi_context_last_subject', 'jump')}\r\n{SetState('eddi_context_last_action', 'start')}\r\n\r\n{set system to SystemDetails(event.system)}\r\n\r\n{_ Wait for the FSD countdown and initial jump}\r\n{Pause(8000)}\r\n\r\n\r\n\r\n{OneOf(\"Destination confirmée\",\"Saut en cours\",\"Télémétrie obtenue\")}.\r\n{ShipName()} est en {OneOf(\"partance pour\", \"route vers\", \"transit vers\")} le système {P(system.name)}.\r\n{if system.name = homesystem.name:\r\nBon retour chez vous, {F(\"Honorific\")}\r\n|else:\r\n{if event.stellarclass = \"D\":\r\nAttention: naine blanche détectée.\r\n|elif event.stellarclass = \"N\":\r\nAttention: étoile à neutron détectée.\r\n|elif event.stellarclass = \"H\":\r\nAlerte. {OneOf(\"trou noir detecté\", \"Anomalie détectée\")}.\r\n|elif event.stellarclass != 'F' && event.stellarclass != 'O' && event.stellarclass != 'G' && event.stellarclass != 'K' && event.stellarclass != 'B' && event.stellarclass != 'A' && event.stellarclass != 'M':\r\nInformation, {OneOf(\"étoile incompatible avec la récupération de fuel.\",\"vous ne pouvez pas récuperer du fuel autour de cette étoile.\",\"Cette étoile n'est pas fuel scoupable.\")}\r\n}\r\n}\r\n\r\n{if AncienSystem.allegiance && AncienSystem.allegiance != \"None\" && AncienSystem.allegiance != \"Independent\" && (!system.allegiance || system.allegiance = \"None\" || system.allegiance = \"Independent\"):\r\nVous {OneOf(\"quittez la zone d'influence\", \"êtes partie de la zone\", \"n'êtes plus dans l'espace\")}\r\n{if AncienSystem.allegiance = \"Empire\":\r\n{OneOf(\"de lempire\",\"impérial\",\"des Impériaux\")}\r\n|elif AncienSystem.allegiance = \"Federation\":\r\n{OneOf(\"de la fédération\",\"fédéral\",\"des Fédéraux\")}\r\n|elif AncienSystem.allegiance = \"Independent\":\r\n{OneOf(\"des Indépendant\",\"libre\",\"des non-aligné\")}\r\n}.\r\n|elif AncienSystem.allegiance && AncienSystem.allegiance != system.allegiance && system.allegiance && system.allegiance != \"None\":\r\nVous {OneOf(\"êtes désormais dans l'espace\", \"entrez sur un espace\", \"arrivez sur un domaine\")}\r\n\r\n{if system.allegiance = 'Empire':\r\n{OneOf('de lempire','impérial','des services impériaux')},\r\n|elif system.allegiance = \"Federation\":\r\n{OneOf('de la fédération','fédéral','des services fédéraux')},\r\n|elif system.allegiance = \"Independent\":\r\n{OneOf(\"des Indépendants\",\"libre\",\"des non-aligné\")},\r\n}.\r\n{if cmdr.title != \"Commandeur\":\r\nBon retour {F(\"Honorific\")}.\r\n}\r\n}\r\n\r\n{if system.visits = 0:\r\nC'est votre première visite dans ce système\r\n|elif system.visits = 1:\r\nC'est votre seconde visite dans ce système\r\n|elif system.visits = 2:\r\nC'est votre Troisième visite dans ce système\r\n|elif system.visits = 3:\r\nC'est votre quatrième visite dans ce système\r\n|else:\r\nVous avez visité ce système {system.visits} fois\r\n}.\r\n\r\n{if !system.population:\r\n{OneOf(\"Système non habité\",\"Pas de présence humaine détectée\", \"l'humanité n'a pas encore colonisé ce système\")}.\r\n|else:\r\n{F(\"System report\")}\r\n{if system.state:\r\nLétat politico-économique général du système est : {set translate to system.state} {F(\"Translate State\")}.\r\n}\r\n}\r\n\r\n\r\n{if MaDistance:\r\n{Occasionally(7, \"{OneOf(\\\"vous êtes à\\\", \\\"la position actuelle est à\\\", \\\"vous êtes maintenant à\\\")} {Humanise(MaDistance)} années lumières de {OneOf(\\\"votre base principale\\\", \\\"{P(homesystem.name)}\\\")}.\")}\r\n}\r\n\r\n{if system.comment:\r\nVous avez {OneOf(\"noté\", \"fait un commentaire\", \"relevé\")} {OneOf(\"au sujet de ce\", \"pour ce\", \"sur ce\")} système, je cite {system.comment}.\r\n}\r\n\r\n}",
      "default": false,
      "name": "FSD engaged",
      "description": "Triggered when your FSD has engaged"
    },
    "Galnet latest news": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch category from state }\r\n{set articlecategory to state.article_category}\r\n\r\n{if articlecategory:\r\n    {set articles to GalnetNewsArticles(articlecategory)}\r\n|else:\r\n    {set articles to GalnetNewsArticles('Article')}\r\n}\r\n\r\n{if len(articles) = 0:\r\n    \"Il n'y a pas d'article non lu dans cette catégorie\"\r\n|else:\r\n    {set article to articles[0]}\r\n    {SetState('eddi_context_galnet_news_id', article.id)}\r\n    {article.title}: {article.content}\r\n    {GalnetNewsMarkRead(article.id)}\r\n}.\r\n",
      "default": true,
      "name": "Galnet latest news",
      "description": "Read the latest unread news in a given category"
    },
    "Galnet news": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch article from state }\r\n{set articleid to state.articleid}\r\n{if articleid:\r\n    {set article to GalnetNews(articleid)}\r\n\r\n    {_ Context }\r\n    {SetState('eddi_context_last_subject', 'news')}\r\n    {SetState('eddi_context_galnet_news_id', articleid)}\r\n}\r\n\r\n{if !article:\r\n    {_ Fetch from context }\r\n    {set article to GalnetNews(state.eddi_context_galnet_news_id)}\r\n}\r\n\r\n{if article:\r\n    {article.title}: {article.content}\r\n|else:\r\n   Je n'ai aucune information au sujet de cet article\r\n}.\r\n\r\n",
      "default": true,
      "name": "Galnet news",
      "description": "Read a particular news article"
    },
    "Galnet news published": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{set statustitle to \"^(Galactic News: ((Weekly .*)|(Starport Status Update)))|(Powerplay: Incoming Update)\"}\r\n\r\n{if len(event.items) = 1:\r\n    Un nouvel article dont le nom est {event.items[0].title} a été plublié dans le Galnet.\r\n    {if !match(event.items[0].title, statustitle):\r\n      Lecture du sujet : {event.items[0].content}.\r\n    }\r\n|elif len(event.items) > 1:\r\n    {len(event.items)} nouveaux articles ont été publiés sur le Galnet.\r\n    {set item to 0}\r\n    {while item < len(event.items):\r\n        {if item = 0:\r\n            Titre du premier : {event.items[item].title}\r\n            {if !match(event.items[item].title, statustitle):\r\n                , et contient: {event.items[item].content}\r\n            }.\r\n        |elif item = 1:\r\n            Le second se nomme {event.items[item].title}\r\n            {if !match(event.items[item].title, statustitle):\r\n                , et en voici le contenu: {event.items[item].content}\r\n            }.\r\n        |elif item = len(event.items) - 1:\r\n            Titre du dernier : {event.items[item].title}\r\n            {if !match(event.items[item].title, statustitle):\r\n                . Lecture : {event.items[item].content}\r\n            }.\r\n        |else:\r\n            Le titre du suivant est {event.items[item].title}\r\n            {if !match(event.items[item].title, statustitle):\r\n                , pour : {event.items[item].content}\r\n            }.\r\n        }\r\n        {set item to item + 1}\r\n        {Pause(1000)}\r\n    }\r\n}",
      "default": true,
      "name": "Galnet news published",
      "description": "Triggered when news is published on Galnet"
    },
    "Galnet oldest news": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch category from state }\r\n{set articlecategory to state.article_category}\r\n\r\n{if articlecategory:\r\n    {set articles to GalnetNewsArticles(articlecategory)}\r\n|else:\r\n    {set articles to GalnetNewsArticles('Article')}\r\n}\r\n\r\n{if len(articles) = 0:\r\n    Il n'y a aucun article non lu dans cette catégorie.\r\n|else:\r\n    {set article to articles[len(articles)-1]}\r\n    {SetState('eddi_context_galnet_news_id', article.id)}\r\n    {article.title}: {article.content}\r\n    {GalnetNewsMarkRead(article.id)}\r\n}.\r\n",
      "default": true,
      "name": "Galnet oldest news",
      "description": "Read the oldest unread news in a given category"
    },
    "Galnet unread report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set articles to GalnetNewsArticles(\"Article\")}\r\n\r\n{if len(articles) = 0:\r\n    Vous avez déjà lu tous les articles\r\n|elif len(articles) = 1:\r\n    You have one unread news item\r\n|else:\r\n    Vous avez {len(articles)} articles non lus\r\n}.",
      "default": true,
      "name": "Galnet unread report",
      "description": "Report on unread news"
    },
    "Heat damage": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Occasionally(2, \"Danger:\")}\r\nDégats thermiques subis!.",
      "default": true,
      "name": "Heat damage",
      "description": "Triggered when your ship is taking damage from excessive heat"
    },
    "Heat warning": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Occasionally(2, \"Alerte:\")}\r\nLa température dépasse les seuils de tolérance!.",
      "default": true,
      "name": "Heat warning",
      "description": "Triggered when your ship's heat exceeds 100%"
    },
    "Honorific": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Scrip par kadoch 08.08.17.}\r\n{if system.allegiance = \"Empire\":\r\n {if cmdr.empirerating.rank = 0:\r\n  Jeune recrue.\r\n |elif cmdr.empirerating.rank = 1:\r\n  Etranger.\r\n |elif cmdr.empirerating.rank = 2:\r\n  Serrf .\r\n |elif cmdr.empirerating.rank = 3:\r\n  Vilain.\r\n |elif cmdr.empirerating.rank = 4:\r\n  Ecuyer.\r\n |elif cmdr.empirerating.rank = 5:\r\n  Chevalier.\r\n |elif cmdr.empirerating.rank = 6:\r\n  Banneret.\r\n |elif cmdr.empirerating.rank = 7:\r\n  Baron.\r\n |elif cmdr.empirerating.rank = 8:\r\n  Vicomte.\r\n |elif cmdr.empirerating.rank = 9:\r\n  Comte.\r\n |elif cmdr.empirerating.rank = 10:\r\n  Marquis.\r\n |elif cmdr.empirerating.rank = 11:\r\n  Duc.\r\n |elif cmdr.empirerating.rank = 12:\r\n  Archiduc.\r\n |elif cmdr.empirerating.rank = 13:\r\n  Prince.\r\n |elif cmdr.empirerating.rank = 14:\r\n  Roi.\r\n }\r\n\r\n|elif system.allegiance = \"Federation\":\r\n {if cmdr.federationrating.rank = 0:\r\n  Jeune recrue.\r\n |elif cmdr.federationrating.rank = 1:\r\n  Recrue.\r\n |elif cmdr.federationrating.rank = 2:\r\n  Cadet.\r\n |elif cmdr.federationrating.rank = 3:\r\n  Matelot.\r\n |elif cmdr.federationrating.rank = 4:\r\n  Second.\r\n |elif cmdr.federationrating.rank = 5:\r\n  Premier maître.\r\n |elif cmdr.federationrating.rank = 6:\r\n  Major.\r\n |elif cmdr.federationrating.rank = 7:\r\n  Enseigne.\r\n |elif cmdr.federationrating.rank = 8:\r\n  Lieutenant.\r\n |elif cmdr.federationrating.rank = 9:\r\n  Capitaine de corvette.\r\n |elif cmdr.federationrating.rank = 10:\r\n  Capitaine de frégatte.\r\n |elif cmdr.federationrating.rank = 11:\r\n  Capitaine de vaisseau.\r\n |elif cmdr.federationrating.rank = 12:\r\n  Contre amiral.\r\n |elif cmdr.federationrating.rank = 13:\r\n  Vice amiral.\r\n |elif cmdr.federationrating.rank = 14:\r\n  Amiral.\r\n |else:\r\n  {cmdr.federationrating.name}\r\n }\r\n|else:\r\n Commandeur\r\n} ",
      "default": true,
      "name": "Honorific",
      "description": "Function to provide a suitable honorific for your commander"
    },
    "Hull damaged": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.vehicle = vehicle:\r\n    {if event.health < 40:\r\n        Danger!:\r\n    |elif event.health < 60:\r\n        Attention!:\r\n    |elif event.health < 80:\r\n        Alerte!:\r\n    }\r\n    {OneOf(\"Coque\", \"Intégrité structurelle\", \"Intégrité\")} {Occasionally(3, \"est\")} à {event.health}%.\r\n}\r\n",
      "default": true,
      "name": "Hull damaged",
      "description": "Triggered when your hull is damaged to a certain extent"
    },
    "Insurance check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set insurance to round(ship.value * cmdr.insurance / 100)}\r\n\r\n{set covereds to round((cmdr.credits / insurance) - 0.5)}\r\n\r\n{if covereds = 0:\r\nDanger: Votre vaisseau est perdu s'il est détruit, faute d'assurance\r\n|elif covereds = 1:\r\nAttention: Vous avez assez de crédit pour payer une seule fois votre assurance.\r\n|elif covereds < 4:\r\nVous pouvez payer votre assurance vaisseau deux ou trois fois, mais pas plus.\r\n|else\r\n(Vos crédit couvre largement le montant de l'assurance du vaisseau)\r\n}",
      "default": false,
      "name": "Insurance check",
      "description": "Check for enough credits to cover your insurance"
    },
    "Jumped": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'saut')}\r\n{SetState('eddi_context_last_action', 'complet')}\r\n{SetState('eddi_context_system_name', system.name)}\r\n{SetState('eddi_context_system_system', system.name)}\r\n",
      "default": true,
      "name": "Jumped",
      "description": "Triggered when you complete a jump to another system"
    },
    "Jumping": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'jump')}\r\n{SetState('eddi_context_last_action', 'start')}\r\n{SetState('eddi_context_system_name', system.name)}\r\n{SetState('eddi_context_system_system', system.name)}\r\n\r\n{OneOf(\"Destination confirmée\",\"Saut en cours\",\"Telemetrie obtenue\")}.\r\n{ShipName()} est en {OneOf(\"partance pour\", \"route vers\", \"voyage vers\", \"transit vers\")} le système {P(system.name)}.\r\n{if system.name = homesystem.name:\r\n    Bon retour chez vous, {F(\"Honorific\")}\r\n|else:\r\n    {if system.bodies[0].distance = 0 && system.bodies[0].stellarclass:\r\n        {set stellarclass to slice(system.bodies[0].stellarclass, 0, 1)}\r\n        {if stellarclass = \"D\":\r\n            Attention: naine blanche détectée.\r\n        |elif stellarclass = \"N\":\r\n            Attention: étoile à neutron détectée.\r\n        |elif stellarclass = \"H\":\r\n            Attention: {OneOf(\"trou noir detecté\", \"trou normand détecté\", \"Anomalie détectée\")}.\r\n        }\r\n    }\r\n\r\n    {if lastsystem.allegiance && lastsystem.allegiance != \"None\" && lastsystem.allegiance != \"Independent\" && (!system.allegiance || system.allegiance = \"None\" || system.allegiance = \"Independent\"):\r\n      Vous {OneOf(\"quittez la zone d'influence\", \"êtes partie de la zone\", \"n'êtes plus dans l'espace\")} {lastsystem.allegiance} .\r\n    |elif lastsystem.allegiance && lastsystem.allegiance != system.allegiance && system.allegiance && system.allegiance != \"None\":\r\n        Vous {OneOf(\"êtes désormais dans une secteur\", \"entrez en zone\", \"arrivez en domaine de contrôle\")} {system.allegiance} .\r\n        {if cmdr.title != \"Commandeur\":\r\n            Welcome back {F(\"Honorific\")}.\r\n        }\r\n    }\r\n\r\n    {if system.visits = 1:\r\n        C'est votre première visite dans ce système\r\n    |elif system.visits = 2:\r\n        C'est votre seconde visite dans ce système\r\n    |elif system.visits = 3:\r\n        C'est votre Troisième visite dans ce système\r\n    |elif system.visits = 4:\r\n        C'est votre quatrième visite dans ce système\r\n    |else:\r\n        Vous avez visité ce système {system.visits} fois\r\n    }.\r\n\r\n    {if !system.population:\r\n        {OneOf(\"système non habité\",\"pas de présence humaine ici\", \"l'humanité n'a pas encore colonisé ce système\", \"Pas de pollution humaine détectée\")}.\r\n    |else:\r\n        {F(\"System report\")}\r\n    }\r\n\r\n    {if system.distancefromhome:\r\n        {Occasionally(7, \"{OneOf(\\\"vou êtes à\\\", \\\"la position actuelle est à\\\", \\\"vous êtes maintenant à\\\")} {Humanise(system.distancefromhome)} années lumières de {OneOf(\\\"votre base principale\\\", \\\"{P(homesystem.name)}\\\")}.\")}\r\n    }\r\n\r\n    {if system.comment:\r\n        You made a {OneOf(\"note\", \"commentaire\", \"remarque\")} {OneOf(\"au sujet de\", \"pour ce\", \"sur ce\")} système.  {OneOf(\"Citation :\", \"disant :\", \"Lecture\", \"c'est :\")} {system.comment}.\r\n    }\r\n}",
      "default": true,
      "name": "Jumping",
      "description": "NO LONGER IN USE"
    },
    "Killed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Killed",
      "description": "Triggered when you kill another player"
    },
    "Landing pad report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set landingpad to state.eddi_context_landing_pad_pad}\r\nVotre plate forme dattérissage numéro {landingpad} est \r\n{if landingpad = 1:\r\n    à proximité à six heure\r\n|elif landingpad = 2:\r\n    proche de lentré à six heures\r\n|elif landingpad = 3:\r\n    à 6 heures vers le fond\r\n|elif landingpad = 4:\r\n    à 6 heures vers le fond\r\n|elif landingpad = 5:\r\n   vers les sept heures proche \r\n|elif landingpad = 6:\r\n    à sept heure juste à cotés\r\n|elif landingpad = 7:\r\n    à sept heure vers le fond\r\n|elif landingpad = 8:\r\n    vers les sept heures en séloignant\r\n|elif landingpad = 9:\r\n    à huit heure juste devant\r\n|elif landingpad = 10:\r\n    à huit heures vers le fond\r\n|elif landingpad = 11:\r\n    à neuf heure proche\r\n|elif landingpad = 12:\r\n    vers les neufs heure juste aprés l'entrée\r\n|elif landingpad = 13:\r\n    vers les neufs heures, au centre de la station\r\n|elif landingpad = 14:\r\n    à neuf heures, au fond de la station\r\n|elif landingpad = 15:\r\n    à meuf heures, vers l'arrière de la station\r\n|elif landingpad = 16:\r\n    juste en entrant à dix heures\r\n|elif landingpad = 17:\r\n    à dix heures, juste aprés l'entrée\r\n|elif landingpad = 18:\r\n    vers les dix heures, dans le cul de basse fosse\r\n|elif landingpad = 19:\r\n {OneOf(\"Vers les dix heures, au fond de la station\",\"software failure, software failllll... A dix heures au fond\")}\r\n|elif landingpad = 20:\r\n    à onze heures proche de l'entrée\r\n|elif landingpad = 21:\r\n    juste aprés l'entrée à onze heures\r\n|elif landingpad = 22:\r\n    vers les onze heures dans les profondeurs de la station\r\n|elif landingpad = 23:\r\n    au fond à onze heures\r\n|elif landingpad = 24:\r\n    à douze heures vers l'entrée\r\n|elif landingpad = 25:\r\n    à douze heure au fond\r\n|elif landingpad = 26:\r\n    à une heure, juste aprés l'entrée\r\n|elif landingpad = 27:\r\n    à une heure, proche de l'entrée\r\n|elif landingpad = 28:\r\n    à une heure vers le milieu de la station\r\n|elif landingpad = 29:\r\n    à une heure vraiment loin de l'entrée\r\n|elif landigpad = 30:\r\n    vers les une heure au fond de la station\r\n|elif landingpad = 31:\r\n    à deux heures, au début de la station\r\n|elif landingpad = 32:\r\n    à deux heures en entrant\r\n|elif landingpad = 33:\r\n    à deux heures au fond\r\n|elif landingpad = 34:\r\n    à deux heures au fond\r\n|elif landingpad = 35:\r\n à trois heures, au début de la station\r\n|elif landingpad = 36:\r\n    à trois heures juste à l'entrée\r\n|elif landingpad = 37:\r\n    à trois heures, vers le centre de la station\r\n|elif landingpad = 38:\r\n    à trois heures vers le fond\r\n|elif landingpad = 39:\r\n    à quatres heures juste en entrant\r\n|elif landingpad = 40:\r\n    à quatres heures au fond\r\n|elif landingpad = 41:\r\n    à cinq heures peu aprés l'entrée\r\n|elif landingpad = 42:\r\n    à cinq heures peu aprés l'entrée\r\n|elif landingpad = 43:\r\n    à cinq heures vers le centre de la station\r\n|elif landingpad = 44:\r\n à cinq heures au fond\r\n|elif landingpad = 45:\r\n à cinq heures au fond de la station\r\n}\r\n , en passant correctement avec les lumières vertes à votre droite.\r\n\r\n",
      "default": true,
      "name": "Landing pad report",
      "description": "Report on the location of a landing pad"
    },
    "Liftoff": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"départ,\",\"envol du vaisseau,\",\"Décollage,\")}\r\n{Occasionally(4,\"Je suis prête à vous suivre, \")} {F(\"Honorific\")} {cmdr.name}",
      "default": false,
      "name": "Liftoff",
      "description": "Triggered when your ship lifts off from a planet's surface"
    },
    "Limpet check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set  controllers to 0}\r\n{for compartment in ship.compartments:\r\n    {if find(compartment.module.name, \"Controller\") != -1:\r\n        {set controllers to controllers + 1}\r\n    }\r\n}\r\n\r\n{set limpets to 0}\r\n{for cargo in ship.cargo:\r\n    {if cargo.commodity.name = \"Limpet\":\r\n        {set limpets to limpets + cargo.amount}\r\n    }\r\n}\r\n\r\n{set tenpercent to ship.cargocapacity / 10 - 1}\r\n{if controllers > 0 && limpets = 0:\r\n    Mémo: Vous avez un contrôleur de drône mais aucun drone collecteur à bord.\r\n|elif controllers = 0 && limpets > 0:\r\n    Vous avez des drones collecteurs mais aucun controleur pour les diriger.\r\n|elif controllers > 0 && limpets < tenpercent:\r\n    Vous avez seulement {limpets} drones collecteur à bord; Vous devriez reconsidérer un restockage.\r\n}\r\n",
      "default": true,
      "name": "Limpet check",
      "description": "Check for the presence/absence of limpets and limpet controllers"
    },
    "Limpet purchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Limpet purchased",
      "description": "Triggered when you buy limpets from a station"
    },
    "Limpet sold": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Limpet sold",
      "description": "Triggered when you sell limpets to a station"
    },
    "Location": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Vous êtes\r\n{if event.docked:\r\n    Parké dans\r\n    {if event.station = event.body:\r\n        la station orbitale  {P(event.station)},\r\n    |else:\r\n        la station planétaire {P(event.station)} on {P(event.body)},\r\n    }\r\n|elif event.body:\r\n    proche de {P(event.body)}\r\n}\r\ndans le système {P(event.system)} .",
      "default": true,
      "name": "Location",
      "description": "Triggered when the commander's location is reported, usually when they reload their game."
    },
    "Market information updated": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Market information updated",
      "description": "Triggered when market information for the currently docked station has been updated"
    },
    "Material collected": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'material')}\r\n{SetState('eddi_context_last_action', 'collect')}\r\n{SetState('eddi_context_material_name', event.material)}\r\n{SetState('eddi_context_material_name', material.name)}\r\n\r\n{if MaterialDetails(event.name).category = \"Data\" :\r\n\r\nLes données,{set translate to event.name} {F(\"Translate Element\")}, {OneOf(\"sont bien téléchargées.\",\"sont enregistrées.\",\"sont collectées\")}\r\n|elif MaterialDetails(event.name).category = \"Manufactured\" :\r\nL'objet manufacturé\r\n{set translate to event.name} {F(\"Translate Element\")} {OneOf(\" viens d'être chargé.\",\" est collecté.\",\" est dans la soute\")}\r\n|else :\r\nLa matière\r\n{set translate to event.name} {F(\"Translate Element\")} {OneOf(\" viens d'être chargé.\",\" est collecté.\",\" est dans la soute\")}\r\n\r\n}.\r\n\r\n\r\n{if MaterialDetails(event.name).rarity.level = 1 :\r\n{Occasionally(5, \"MAtériel très commun. N'hésitez pas à le rejeter si vous en avez en stock\")}\r\n\r\n|elif MaterialDetails(event.name).rarity.level = 2 :\r\n{Occasionally(4, \"Quelque chose de commun, doiton le garder?\")}\r\n\r\n|elif MaterialDetails(event.name).rarity.level = 3 :\r\n{Occasionally(3, \"C'est pas tous les jours qu'on voit ça, mais c'est pas exceptionnel non plus.\")}\r\n\r\n|elif MaterialDetails(event.name).rarity.level = 4 :\r\n{Occasionally(2, \"Element rare, cela servira pour des améliorations peut être.\")}\r\n\r\n|elif MaterialDetails(event.name).rarity.level = 5 :\r\nElément très rare. Son utilité ne fait aucun doute!.\r\n}\r\n{F(Material required report)}\r\n{F(Material inventory report)}\r\n{F(Material threshold)}",
      "default": false,
      "name": "Material collected",
      "description": "Triggered when you collect a material"
    },
    "Material discard report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Function to obtain a material from inventory}\r\n{set _inventory(required) to:\r\n{for material in materials:\r\n{if material.material = required:\r\n{return material}\r\n}\r\n}\r\n}\r\n\r\n{_ Fetch material from state }\r\n{set material to state.material}\r\n{if material:\r\n{_ Fetch full material details }\r\n{set material to MaterialDetails(material)}\r\n\r\n{_ Context }\r\n{SetState('eddi_context_last_subject', 'material')}\r\n{SetState('eddi_context_material_name', material.name)}\r\n}\r\n\r\n{if !material:\r\n{_ Fetch from context }\r\n{set material to MaterialDetails(state.eddi_context_material_name)}\r\n}\r\n\r\n{set inventory to _inventory(material.name)}\r\n\r\n\r\n{if inventory:\r\n{if inventory.maximum && inventory.maximum < inventory.amount:\r\n{set over to inventory.amount - inventory.maximum}\r\n{if over > 1:\r\nVous pouvez éjecter {over} unités de {set translate to inventory.material} {F(\"Translate Element\")} {OneOf(\"pour avoir la quantité maximum désirée\",\"Pour respecter vos quotas\")}.\r\n|elif over = 1:\r\nVous pouvez éjecter 1 unité de {set translate to inventory.material} {F(\"Translate Element\")} pour avoir la quantité maximum désirée.\r\n}\r\n|elif inventory.desired && inventory.desired < inventory.amount:\r\n{set over to inventory.amount - inventory.desired}\r\n{if over > 1:\r\nVous pouvez éjecter {over} unités de {set translate to inventory.material} {F(\"Translate Element\")} pour avoir la quantité optimale désirée.\r\n|elif over = 1:\r\nVous pouvez éjecter 1 unités de {set translate to inventory.material} {F(\"Translate Element\")} pour avoir la quantité optimale désirée.\r\n}\r\n|elif inventory.desired:\r\nVous avez de la marge pour atteindre votre limite de stock désirée de {set translate to inventory.material} {F(\"Translate Element\")}.\r\n|elif inventory.maximum:\r\nA vous de voir si vous souhaitez vous défaire de {set translate to inventory.material} {F(\"Translate Element\")}.\r\n|else:\r\nVous êtes en dessous de tous les seuils désirés de {set translate to inventory.material} {F(\"Translate Element\")}.\r\n}\r\n}",
      "default": false,
      "name": "Material discard report",
      "description": "Report on how many of a material can be discarded"
    },
    "Material discarded": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'material')}\r\n{SetState('eddi_context_last_action', 'discard')}\r\n{SetState('eddi_context_material_name', event.material)}\r\n",
      "default": true,
      "name": "Material discarded",
      "description": "Triggered when you discard a material"
    },
    "Material discovered": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'material')}\r\n{SetState('eddi_context_last_action', 'discover')}\r\n{SetState('eddi_context_material_name', event.material)}\r\n",
      "default": true,
      "name": "Material discovered",
      "description": "Triggered when you discover a material"
    },
    "Material donated": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'material')}\r\n{SetState('eddi_context_last_action', 'donate')}\r\n{SetState('eddi_context_material_name', event.material)}\r\n",
      "default": true,
      "name": "Material donated",
      "description": "Triggered when you donate a material"
    },
    "Material inventory": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Material inventory",
      "description": "Triggered when you obtain an inventory of your current materials"
    },
    "Material inventory report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Function to obtain a material from inventory}\r\n{set _inventory(required) to:\r\n    {for material in materials:\r\n        {if material.material = required:\r\n            {return material}\r\n        }\r\n    }\r\n}\r\n\r\n{_ Fetch material from state }\r\n{set material to state.material}\r\n{if material:\r\n    {_ Fetch full material details }\r\n    {set material to MaterialDetails(material)}\r\n \r\n    {_ Context }\r\n    {SetState('eddi_context_last_subject', 'material')}\r\n    {SetState('eddi_context_last_subject', 'inventory')}\r\n    {SetState('eddi_context_material_name', material.name)}\r\n}\r\n\r\n{if !material:\r\n    {_ Fetch from context }\r\n    {set material to MaterialDetails(state.eddi_context_material_name)}\r\n}\r\n\r\n{set inventory to _inventory(material.name)}\r\n\r\n{if inventory && inventory.amount > 0:\r\n    {if inventory.amount = 1:\r\n       Vous avez {inventory.amount} unités de {set translate to inventory.material} {F(\"Translate Element\")} à bord.\r\n    |else:\r\n       Vous avez {inventory.amount} unités de {set translate to inventory.material} {F(\"Translate Element\")}à bord.\r\n    }\r\n|else:\r\n    Vous navez aucun {set translate to inventory.material} {F(\"Translate Element\")} à bord.\r\n}",
      "default": true,
      "name": "Material inventory report",
      "description": "Report on how many of a material are on-board"
    },
    "Material location report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch material from state }\r\n{set material to state.material}\r\n{if material:\r\n    {_ Fetch full material details }\r\n    {set material to MaterialDetails(material)}\r\n\r\n    {_ Context }\r\n    {SetState('eddi_context_last_subject', 'material')}\r\n    {SetState('eddi_context_material_name', material.name)}\r\n}\r\n\r\n{if !material:\r\n    {_ Fetch from context }\r\n    {set material to MaterialDetails(state.eddi_context_material_name)}\r\n}\r\n\r\n{if material.name:\r\n    {if material.location:\r\n        {set translate to material.name} {F(\"Translate Element\")} peut être trouvé à {material.location}\r\n    |else:\r\n        Aucune information pour savoir où trouver {set translate to material.name} {F(\"Translate Element\")}\r\n    }\r\n|else:\r\n    Je n'est aucune information sur ça\r\n}.",
      "default": true,
      "name": "Material location report",
      "description": "Report on the where to obtain a particular material"
    },
    "Material required report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{if system.power = \"Felicia Winters\":\r\nNous entrons dans un système Allié, nous serons tranquille.\r\n|elif system.power && !system.power = \"Felicia Winters\":\r\nAttention, ce système est hostile pour nous.\r\n}{set required to []}\r\n\r\n{for material in materials:\r\n  {if material.desired && material.amount < material.desired:\r\n    {set required to cat(required, [material])}\r\n }\r\n}\r\n\r\n{if len(required) > 0:\r\n    Il vous manque\r\n    {if len(required) = 1:\r\n        {required[0].desired - required[0].amount} \r\n  {set translate to required[0].material} {F(\"Translate Element\")}\r\n    |elif len(required) = 2:\r\n        {required[0].desired - required[0].amount} {set translate to required[0].material} {F(\"Translate Element\")} and {required[1].desired - required[1].amount} {set translate to required[1].material} {F(\"Translate Element\")}\r\n    |else:\r\n        {set cur to 0}\r\n        {while cur < len(required):\r\n            {if cur = 0:\r\n                {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            |elif cur < len(required) - 1:\r\n                , {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            |else:\r\n                , and {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }.\r\n|else:\r\n    Quantité de matériel présent comme indiqué dans votre liste de choix.\r\n}",
      "default": true,
      "name": "Material required report",
      "description": "Report on how many of a material are required to reach 'desired' level"
    },
    "Material threshold": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.level = 'Minimum':\r\n    {_ Gone below the minimum level }\r\n    {OneOf(\"Stock\", \"Inventaire\", \"Approvisionnemet\")} de {set translate to event.material.name} {F(\"Translate Element\")} est passé en dessous de votre minimum surveillé.\r\n|elif event.level = 'Maximum':\r\n  {_ Gone above the maximum level }\r\n    {OneOf(\"Stock\", \"Inventaire\", \"Approvisionnemet\")} of {set translate to event.material.name} {F(\"Translate Element\")} a augmenté au delà de votre maximum toléré.\r\n|else:\r\n    {_ Moved around the desired level }\r\n    {if event.change = 'Increase':\r\n        Vous avez atteint la quantité optimale désirée de : {set translate to event.material.name} {F(\"Translate Element\")}.\r\n    |else:\r\n        Vous êtes en dessous de la quantité nominale désirée pour : {set translate to event.material.name} {F(\"Translate Element\")}.\r\n    }\r\n} \r\n\r\n{OneOf(\"Le stock actuel est de {event.amount}\",\r\n       \"inventaire de {event.amount}\",\r\n       \"{event.amount} unités à bord\")}.",
      "default": true,
      "name": "Material threshold",
      "description": "Triggered when a material reaches a threshold"
    },
    "Material use report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch material from state }\r\n{set material to state.material}\r\n{_ set material to \"Carbon\"}\r\n\r\n\r\n{if material:\r\n    {_ Fetch full material details }\r\n    {set material to MaterialDetails(material)}\r\n\r\n    {_ Context }\r\n    {SetState('eddi_context_last_subject', 'material')}\r\n    {SetState('eddi_context_material_name', material.name)}\r\n}\r\n\r\n{if !material:\r\n    {_ Fetch from context }\r\n    {set material to MaterialDetails(state.eddi_context_material_name)}\r\n}\r\n\r\n{if material && material.name:\r\n    {set uses to len(material.blueprints)}\r\n    {if slice(material.name, len(material.name)-1) = 's':\r\n        {set plural to 'sont'}\r\n    |else:\r\n        {set plural to 'est'}\r\n    }  \r\n    {if uses = 0:\r\n      {set translate to material.name} {F(\"Translate Element\")} {plural} non utilisé quelque soit le schéma technique.\r\n    |elif uses = 1:\r\n   {set translate1 to material.blueprints[0].name}\r\n   {set translate2 to material.blueprints[0].modulename}\r\n  {set NomFit to F(\"Translate Blueprint\")}\r\n        {set name to cat(NomFit, ' grade ', material.blueprints[0].grade)}\r\n        \r\n   {set translate to material.name} {F(\"Translate Element\")} {plural} utilisé pour le schéma {name}\r\n  |elif uses = 2:\r\n   {set translate1 to material.blueprints[0].name}\r\n   {set translate2 to material.blueprints[0].modulename}\r\n  {set NomFit to F(\"Translate Blueprint\")}\r\n\r\n        {set name0 to cat(NomFit, ' grade ', material.blueprints[0].grade)}\r\n\r\n  {set translate1 to material.blueprints[1].name}\r\n  {set translate2 to material.blueprints[1].modulename}\r\n  {set NomFit to F(\"Translate Blueprint\")}\r\n\r\n        {set name1 to cat(NomFit, ' grade ', material.blueprints[1].grade)}\r\n        {set translate to material.name} {F(\"Translate Element\")} {plural} utilisé pour {name0} et {name1}.\r\n    |else:\r\n        {set translate to material.name} {F(\"Translate Element\")} {plural} utilisés dans {len(material.blueprints)} schéma technique.  Liste :\r\n        {set cur to 0}\r\n        {while cur < len(material.blueprints):\r\n\r\n    {set translate1 to material.blueprints[cur].name}\r\n    {set translate2 to material.blueprints[cur].modulename}\r\n  {set NomFit to F(\"Translate Blueprint\")}\r\n            {set name to cat(NomFit, ' grade ', material.blueprints[cur].grade)}\r\n            {if cur = 0:\r\n                {name} \r\n   |elif cur < len(material.blueprints) - 1:\r\n                , {name}\r\n            |else:\r\n                , et {name}\r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }\r\n|else:\r\n    Je n'ai aucune information sur ce matériel\r\n}.\r\n",
      "default": true,
      "name": "Material use report",
      "description": "Report on the use of a material"
    },
    "Materials discard report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "\r\n{_ Find those that are above maximum, desired and minimum}\r\n{set shoulddiscardmaterials to []}\r\n{set coulddiscardmaterials to []}\r\n{set lastdiscardmaterials to []}\r\n\r\n{for material in materials:\r\n    {if material.maximum && material.amount > material.maximum:\r\n      {set shoulddiscardmaterials to cat(shoulddiscardmaterials, [material])}\r\n    |elif material.desired && material.amount > material.desired:\r\n      {set coulddiscardmaterials to cat(coulddiscardmaterials, [material])}\r\n    |elif material.minimum && material.amount > material.minimum:\r\n      {set lastdiscardmaterials to cat(lastdiscardmaterials, [material])}\r\n    }\r\n}\r\n\r\n{if len(shoulddiscardmaterials) > 0:\r\n    Vous êtes au dela du maximum désiré pour {if len(shoulddiscardmaterials) = 1: 1 éléments |else: {len(shoulddiscardmaterials)} élements}.  Vous pouvez jeter :\r\n    {if len(shoulddiscardmaterials) = 1:\r\n        {shoulddiscardmaterials[0].amount - shoulddiscardmaterials[0].maximum} {set translate to shoulddiscardmaterials[0].material} {F(\"Translate Element\")} \r\n\r\n    |elif len(shoulddiscardmaterials) = 2:\r\n        {shoulddiscardmaterials[0].amount - shoulddiscardmaterials[0].maximum} {set translate to shoulddiscardmaterials[0].material} {F(\"Translate Element\")}  and {shoulddiscardmaterials[1].amount - shoulddiscardmaterials[1].maximum} {set translate to shoulddiscardmaterials[1].material} {F(\"Translate Element\")} \r\n    |else:\r\n        {set cur to 0}\r\n        {while cur < len(shoulddiscardmaterials):\r\n            {if cur = 0:\r\n                {shoulddiscardmaterials[cur].amount - shoulddiscardmaterials[cur].maximum} {set translate to shoulddiscardmaterials[cur].material} {F(\"Translate Element\")} \r\n            |elif cur < len(shoulddiscardmaterials) - 1:\r\n                , {shoulddiscardmaterials[cur].amount - shoulddiscardmaterials[cur].maximum} {set translate to shoulddiscardmaterials[cur].material} {F(\"Translate Element\")} \r\n            |else:\r\n                , et {shoulddiscardmaterials[cur].amount - shoulddiscardmaterials[cur].maximum} {set translate to shoulddiscardmaterials[cur].material} {F(\"Translate Element\")} \r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }.\r\n|elif len(coulddiscardmaterials) > 0:\r\n    vous êtes au dessus de votre seuil médian de matière pour {if len(coulddiscardmaterials) = 1: 1 produit |else: {len(coulddiscardmaterials)} éléments}.  vous pouvez vous débarasser de :\r\n    {if len(coulddiscardmaterials) = 1:\r\n        {coulddiscardmaterials[0].amount - coulddiscardmaterials[0].desired} {set translate to coulddiscardmaterials[0].material} {F(\"Translate Element\")}  \r\n\r\n    |elif len(coulddiscardmaterials) = 2:\r\n        {coulddiscardmaterials[0].amount - coulddiscardmaterials[0].desired} {set translate to coulddiscardmaterials[0].material} {F(\"Translate Element\")}   and {coulddiscardmaterials[1].amount - coulddiscardmaterials[1].desired} {set translate to coulddiscardmaterials[1].material} {F(\"Translate Element\")}  \r\n    |else:\r\n        {set cur to 0}\r\n        {while cur < len(coulddiscardmaterials):\r\n            {if cur = 0:\r\n                {coulddiscardmaterials[cur].amount - coulddiscardmaterials[cur].desired} {set translate to coulddiscardmaterials[cur].material} {F(\"Translate Element\")}\r\n            |elif cur < len(coulddiscardmaterials) - 1:\r\n                , {coulddiscardmaterials[cur].amount - coulddiscardmaterials[cur].desired} {set translate to coulddiscardmaterials[1].material} {F(\"Translate Element\")}\r\n            |else:\r\n                , and {coulddiscardmaterials[cur].amount - coulddiscardmaterials[cur].desired} {set translate to coulddiscardmaterials[1].material} {F(\"Translate Element\")}\r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }.\r\n|elif len(lastdiscardmaterials) > 0:\r\n    Vous êtes au dessus de votre seuil minimum de matière pour {if len(lastdiscardmaterials) = 1: 1 élément |else: {len(lastdiscardmaterials)} éléments}.  Vous pouvez éliminer :\r\n    {if len(lastdiscardmaterials) = 1:\r\n        {lastdiscardmaterials[0].amount - lastdiscardmaterials[0].minimum} {set translate to lastdiscardmaterials[0].material} {F(\"Translate Element\")}\r\n\r\n    |elif len(lastdiscardmaterials) = 2:\r\n        {lastdiscardmaterials[0].amount - lastdiscardmaterials[0].minimum} {set translate to lastdiscardmaterials[0].material} {F(\"Translate Element\")} and {lastdiscardmaterials[1].amount - lastdiscardmaterials[1].minimum} {set translate to lastdiscardmaterials[1].material} {F(\"Translate Element\")}\r\n    |else:\r\n        {set cur to 0}\r\n        {while cur < len(lastdiscardmaterials):\r\n            {if cur = 0:\r\n                {lastdiscardmaterials[cur].amount - lastdiscardmaterials[cur].minimum} {set translate to lastdiscardmaterials[cur].material} {F(\"Translate Element\")}\r\n            |elif cur < len(lastdiscardmaterials) - 1:\r\n                , {lastdiscardmaterials[cur].amount - lastdiscardmaterials[cur].minimum} {set translate to lastdiscardmaterials[cur].material} {F(\"Translate Element\")}\r\n            |else:\r\n                , and {lastdiscardmaterials[cur].amount - lastdiscardmaterials[cur].minimum} {set translate to lastdiscardmaterials[cur].material} {F(\"Translate Element\")}\r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }.\r\n|else:\r\n    Aucun des matériaux ne dépasse vos seuils.\r\n}\r\n",
      "default": true,
      "name": "Materials discard report",
      "description": "Report on which materials can be discarded"
    },
    "Materials required report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set required to []}\r\n\r\n{for material in materials:\r\n  {if material.desired && material.amount < material.desired:\r\n    {set required to cat(required, [material])}\r\n }\r\n}\r\n\r\n{if len(required) > 0:\r\n    Il vous manque\r\n    {if len(required) = 1:\r\n        {required[0].desired - required[0].amount} \r\n  {set translate to required[0].material} {F(\"Translate Element\")}\r\n    |elif len(required) = 2:\r\n        {required[0].desired - required[0].amount} {set translate to required[0].material} {F(\"Translate Element\")} and {required[1].desired - required[1].amount} {set translate to required[1].material} {F(\"Translate Element\")}\r\n    |else:\r\n        {set cur to 0}\r\n        {while cur < len(required):\r\n            {if cur = 0:\r\n                {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            |elif cur < len(required) - 1:\r\n                , {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            |else:\r\n                , and {required[cur].desired - required[cur].amount} {set translate to required[cur].material} {F(\"Translate Element\")}\r\n            }\r\n            {set cur to cur + 1}\r\n        }\r\n    }.\r\n|else:\r\n    Quantité de matériel présent comme indiqué dans votre liste de choix.\r\n}",
      "default": true,
      "name": "Materials required report",
      "description": "Report on how many of each material are required to reach 'desired' level"
    },
    "Message received": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'message')}\r\n{SetState('eddi_context_last_action', 'receive')}\r\n{SetState('eddi_context_message_name', event.from)}\r\n{SetState('eddi_context_message_content', event.message)}\r\n\r\n{if event.message = \"o7\":\r\n    {event.from} salut\r\n    {if event.channel = \"player\":\r\n        toi\r\n    }.\r\n|else:\r\n    Message reçu de {event.from}.  Lecture: {event.message}.\r\n}\r\n",
      "default": true,
      "name": "Message received",
      "description": "Triggered when you receive a message"
    },
    "Message sent": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'message')}\r\n{SetState('eddi_context_last_action', 'send')}\r\n{SetState('eddi_context_message_name', event.to)}\r\n{SetState('eddi_context_message_content', event.message)}\r\n\r\n{OneOf(\"Message envoyé\", \"Message réceptionné\", \"Message expédié\")}.",
      "default": true,
      "name": "Message sent",
      "description": "Triggered when you send a message"
    },
    "Mission abandoned": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Mission abandoned.",
      "default": true,
      "name": "Mission abandoned",
      "description": "Triggered when you abandon a mission"
    },
    "Mission accepted": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.communal:\r\n    Community goal accepté.\r\n|else:\r\n    Mission pour {P(event.faction)} acceptée.\r\n    {if event.passengerswanted:\r\n        {set wanteddescription to OneOf(\"Passager recherché\", \"criminel connu\")}\r\n        Attention: {OneOf(\"Vous transportez un {wanteddescription}\",\"{wanteddescription} maintenant à bord\")}.\r\n    }\r\n}",
      "default": true,
      "name": "Mission accepted",
      "description": "Triggered when you accept a mission"
    },
    "Mission completed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.reward > 0:\r\n    Paiment de {Humanise(event.reward)} credits {Occasionally(2, 'de {P(event.faction)}')} {OneOf('reçu', 'confirmé')}.\r\n|elif event.donation > 0:\r\n    {OneOf(\"Donation {Occasionally(2, 'de {Humanise(event.donation)} credits')} pour {P(event.faction)} {Occasionally(2, 'qui vous est reconnaissante')}\",\r\n                 \"{P(event.faction)} a {Occasionally(2, 'gracieusement')} reçue votre donation {Occasionally(2, 'de {Humanise(event.donation)} credits')}\",\r\n                 \"{P(event.faction)} vous remercie pour votre donation {Occasionally(2, 'de {Humanise(event.donation)} credits')}\"\r\n    )}.\r\n|else:\r\n    Mission terminée avec succés.\r\n}\r\n{for commodityreward in event.commodityrewards:\r\n  {commodityreward.amount} tonnes de {set translate to commodityreward.commodity} {F(\"Translate Commodities\")} {OneOf(\"maintenant à bord\", \"reçu également\", \"confirmé en soute\")}.\r\n}",
      "default": true,
      "name": "Mission completed",
      "description": "Triggered when you complete a mission"
    },
    "Mission failed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Mission failed",
      "description": "Triggered when you fail a mission"
    },
    "Mission redirected": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Mission redirected from \r\n{if event.olddestinationstation:\r\n   {event.olddestinationstation} in the {event.olddestinationsystem} \r\n   to {event.newdestinationstation} in the {event.newdestinationsystem}\r\n|else:\r\n   {event.olddestinationsystem} to {event.newdestinationsystem}\r\n}",
      "default": true,
      "name": "Mission redirected",
      "description": "Triggered when a mission is redirected"
    },
    "Modification applied": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Modification applied",
      "description": "Triggered when you apply a modification to a module"
    },
    "Modification crafted": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Modification crafted",
      "description": "Triggered when you craft a modification to a module"
    },
    "Music": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Music",
      "description": "Triggered when the game music 'mood' changes"
    },
    "Nav beacon scan": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context _}\r\n{SetState('eddi_context_last_subject', 'nav beacon')}\r\n{SetState('eddi_context_last_action', 'scan')}\r\n{SetState('eddi_context_star_system', system.name)}\r\n{SetState('eddi_context_nav_scans', event.numbodies)}\r\n\r\n{set nav to OneOf(\"nav\", \"navigation\")}\r\n{set beacon to OneOf(\"beacon\", \"buoy\")}\r\n{OneOf(\"This {nav} {beacon} has transferred details of {event.numbodies} bodies in this system.\",\r\n \"Details on {event.numbodies} bodies in this system received.\")}\r\n\r\n{Pause(500)}",
      "default": true,
      "name": "Nav beacon scan",
      "description": "Triggered when you scan a nav beacon, before the scan data for all the bodies in the system is written into the journal"
    },
    "NPC attack commenced": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Alerte: attaque \r\n{if event.by:\r\n   de {event.by} \r\n}\r\ndetectée.",
      "default": true,
      "name": "NPC attack commenced",
      "description": "Triggered when an attack on your ship by an NPC is detected"
    },
    "NPC cargo scan commenced": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ See if we are carrying non-limpet cargo}\r\n{set carryingvaluablecargo to 0}\r\n{for cargo in ship.cargo:\r\n    {if cargo.commodity != 'Limpet':\r\n        {set carryingvaluablecargo to 1}\r\n    }\r\n}\r\n\r\n{if carryingvaluablecargo = 1:\r\n  Attention: scan de cargaison\r\n  {if event.by:\r\n    de {event.by} \r\n  }\r\n  detectée.\r\n}\r\n",
      "default": true,
      "name": "NPC cargo scan commenced",
      "description": "Triggered when a cargo scan on your ship by an NPC is detected"
    },
    "NPC interdiction commenced": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Alerte: tentative dinterdiction\r\n{if event.by:\r\n   par {event.by} \r\n}\r\ndetectée.\r\n\r\n{Occasionally(3, \"Puissance à 0 ou tentez de vous évader\")}.",
      "default": true,
      "name": "NPC interdiction commenced",
      "description": "Triggered when an interdiction attempt on your ship by an NPC is detected"
    },
    "Power commodity delivered": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.amount} unités de {event.commodity} livrées {Occasionally(2, \"pour {P(event.power)}\")}.",
      "default": true,
      "name": "Power commodity delivered",
      "description": "Triggered when a commander delivers a commodity to a power"
    },
    "Power commodity fast tracked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{Humanise(event.amount)} credits spent fast-tracking commodities {Occasionally(2, \"for {P(event.power)}\")}.",
      "default": true,
      "name": "Power commodity fast tracked",
      "description": "Triggered when a commander fast tracks a commodity of a power"
    },
    "Power commodity obtained": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.amount} unités de {event.commodity} obtenues {Occasionally(2, \"de {P(event.power)}\")}.\r\n",
      "default": true,
      "name": "Power commodity obtained",
      "description": "Triggered when a commander obtains a commodity from a power"
    },
    "Power defected": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Vous avez quité {P(event.frompower)} pour rejoindre {P(event.topower)}.",
      "default": true,
      "name": "Power defected",
      "description": "Triggered when you defect from one power to another"
    },
    "Power expansion vote cast": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Power expansion vote cast",
      "description": "Triggered when a commander votes for system expansion"
    },
    "Power joined": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Vous avez intégré les rangs de {P(event.power)}.",
      "default": true,
      "name": "Power joined",
      "description": "Triggered when you join a power"
    },
    "Power left": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Vous ne faites plus parti de  {P(event.power)}.",
      "default": true,
      "name": "Power left",
      "description": "Triggered when you leave a power"
    },
    "Power preparation vote cast": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Power preparation vote cast",
      "description": "Triggered when a commander votes for system perparation"
    },
    "Power salary claimed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Salaire de {Humanise(event.amount)}  credits obtenus {Occasionally(2, \"de {P(event.power)}\")}.",
      "default": true,
      "name": "Power salary claimed",
      "description": "Triggered when a commander claims salary from a power"
    },
    "Power voucher received": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Power voucher received",
      "description": "Triggered when a commander turns in combat vouchers against an opposing power"
    },
    "Repeat last speech": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{state.eddi_context_last_speech}",
      "default": true,
      "name": "Repeat last speech",
      "description": "Repeat the last thing said"
    },
    "Screenshot": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Screenshot",
      "description": "Triggered when you take a screenshot"
    },
    "Search and rescue": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.amount} \r\n\r\n{if event.name = \"usscargoblackbox\":\r\n   {if event.amount > 1:\r\n      {OneOf(\"flight records\", \"black boxes\")}\r\n   |else: \r\n      {OneOf(\"flight record\", \"black box\")}\r\n   }\r\n|elif event.name = \"occupiedcryopod\":\r\n   {if event.amount > 1:\r\n      {OneOf(\"occupied escape pods\", \"occupied cryo pods\")}\r\n   |else: \r\n      {OneOf(\"occupied escape pod\", \"occupied cryo pod\")}\r\n   }\r\n|elif event.name = \"damagedcryopod\":\r\n   {if event.amount > 1:\r\n      {OneOf(\"damaged escape pods\", \"damaged cryo pods\")}\r\n   |else: \r\n      {OneOf(\"damaged escape pod\", \"damaged cryo pod\")}\r\n   }\r\n|elif event.name = \"personaleffects\":\r\n   {if event.amount > 1:\r\n      {OneOf(\"sets\", \"collections\")} of   \r\n   |else: \r\n      {OneOf(\"set\", \"collection\")} of\r\n   }\r\n   {OneOf(\"personal effects\", \"personal belongings\")}\r\n|elif event.name = \"wreakagecomponent\":\r\n   {set wreakage to OneOf(\"wreakage\", \"debris\")}\r\n   {set fragment to OneOf(\"fragment\", \"bit\", \"piece\")}\r\n   {if event.amount > 1:\r\n      {OneOf(\"{fragment}s of {wreakage}\", \"{wreakage} {fragment}s\")}\r\n   |else: \r\n      {OneOf(\"{fragment} of {wreakage}\", \"{wreakage} {fragment}\")}\r\n   }\r\n|elif event.name = \"hostage\":\r\n   {if event.amount > 1:\r\n      {OneOf(\"hostages\")}\r\n   |else: \r\n      {OneOf(\"hostage\")}\r\n   }\r\n|else:\r\n   {if event.amount > 1:\r\n      {event.name}s\r\n   |else: \r\n      {event.name}\r\n   }   \r\n}\r\n\r\n{OneOf(\"recovered\")}\r\n{Occasionally(2, \"in exchange\")}\r\nfor {Humanise(event.reward)} credits",
      "default": true,
      "name": "Search and rescue",
      "description": "Triggered when delivering items to a Search and Rescue contact"
    },
    "Security presence report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{if system.population > 0:\r\n    Il y a \r\n    {if system.security = \"None\":\r\n        aucune présence\r\n  {OneOf(\"policière\", \"des forces de sécurités\", \"de représentatnts de la loi\")} \r\n    |elif system.security = \"Low\":\r\n        présence \r\n  {OneOf(\"policière\", \"des forces de sécurités\", \"de représentatnts de la loi\")}   \r\n  {OneOf(\"est au minimum\", \"vraiment faible\", \"légère\")}\r\n    |elif system.security = \"Medium\":\r\n        présence \r\n  {OneOf(\"policière\", \"des forces de sécurités\", \"de représentatnts de la loi\")} \r\n        {OneOf(\"standard\", \"moyenne\", \"normale\")}\r\n    |elif system.security = \"High\":\r\n        présence \r\n  {OneOf(\"policière\", \"des forces de sécurités\", \"de représentatnts de la loi\")} \r\n        {OneOf(\"élevée\", \"lourde\", \"forte\")}\r\n    |else:\r\n        présence \r\n  {OneOf(\"policière\", \"des forces de sécurités\", \"de représentatnts de la loi\")} \r\n       {system.security}\r\n    }\r\n {OneOf(\"ici\", \"dans ce système\", \"dans les environs\")}.\r\n}",
      "default": true,
      "name": "Security presence report",
      "description": "Function to report on the details of system security"
    },
    "Self destruct": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Séquence d'auto-destruction enclenchée, 5.....4......pensez à évacuer...3....",
      "default": true,
      "name": "Self destruct",
      "description": "Triggered when you start the self destruct sequence"
    },
    "Settlement approached": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Settlement approached",
      "description": "Triggered when you approach a settlement"
    },
    "Shields down": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Shields down",
      "description": "Triggered when your ship's shields go offline"
    },
    "Shields up": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Shields up",
      "description": "Triggered when your ship's shields come online"
    },
    "Ship delivered": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{ShipCallsign()} transfert terminé.",
      "default": true,
      "name": "Ship delivered",
      "description": "Triggered when your newly-purchased ship is delivered to you"
    },
    "Ship interdicted": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship interdicted",
      "description": "Triggered when your ship is interdicted by another ship"
    },
    "Ship interdiction": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship interdiction",
      "description": "Triggered when you interdict another ship"
    },
    "Ship loadout": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship loadout",
      "description": "Triggered when you obtain the loadout of your ship"
    },
    "Ship purchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{P(event.ship)} acheté.",
      "default": true,
      "name": "Ship purchased",
      "description": "Triggered when you purchase a ship"
    },
    "Ship rebooted": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship rebooted",
      "description": "Triggered when you run reboot/repair on your ship"
    },
    "Ship refuelled": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf('plein du {ShipName()} complet','Réservoirs du {ShipName()} sont remplis','nen jetez plu, la cour est pleine','{ShipName()} a ses réservoirs de nouveau plein')}.",
      "default": true,
      "name": "Ship refuelled",
      "description": "Triggered when you refuel your ship"
    },
    "Ship renamed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{ShipName()} now registered with {P(system.faction)}.  Identification is {ICAO(event.ident)}.",
      "default": true,
      "name": "Ship renamed",
      "description": "Triggered when you rename a ship"
    },
    "Ship repaired": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{ShipName()} repaired.",
      "default": true,
      "name": "Ship repaired",
      "description": "Triggered when you repair your ship"
    },
    "Ship repurchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship repurchased",
      "description": "Triggered when you repurchase your ship"
    },
    "Ship restocked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{ShipName()} {OneOf(\"Réaprovisionné\",\"réarmé\")}.",
      "default": true,
      "name": "Ship restocked",
      "description": "Triggered when you restock your ship's ammunition"
    },
    "Ship shutdown": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Ship shutdown",
      "description": "Triggered when your ship's system are shutdown"
    },
    "Ship sold": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Le {ShipName(event.shipid, event.ship)} {OneOf('sort du service actif','prend sa retraite')}.\",\r\n             \"Mise hors service du {ShipName(event.shipid, event.ship)}.\",\r\n             \"vente du {ShipName(event.shipid, event.ship)}.\",)}",
      "default": true,
      "name": "Ship sold",
      "description": "Triggered when you sell a ship"
    },
    "Ship sold on rebuy": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{event.ship}, identification {event.shipid}, sold in {event.system} for {Humanise(event.price)} credits",
      "default": true,
      "name": "Ship sold on rebuy",
      "description": "Triggered when you sell a ship to raise funds on the insurance / rebuy screen"
    },
    "Ship swapped": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{if event.storedship:\r\n    {OneOf(\"Mise en réserve du\", \"stockage du\", \"rengement du\")} {ShipName(event.storedshipid, event.storedship)} et\r\n|elif event.soldship:\r\n    Vente du {ShipName(event.soldshipid, event.soldship)} et\r\n}\r\n\r\n{OneOf(\"Activation du\",\"récupération du\",\"transfert vers\")} {ShipName(event.shipid, event.ship)}.",
      "default": true,
      "name": "Ship swapped",
      "description": "Triggered when you swap a ship"
    },
    "Ship transfer initiated": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{ShipName(event.shipid, event.ship)} {OneOf(\"en chemin de\",\"transéré depuis\", \"transfert amorcé depuis\", \"est transporté depuis\", \"va arriver de\")} {P(event.system)}.",
      "default": true,
      "name": "Ship transfer initiated",
      "description": "Triggered when you initiate a ship transfer"
    },
    "SRV docked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Buggy\", \"SRV\")} {OneOf(\"rentré\", \"parké\", \"rangé\", \"docké\")}.",
      "default": true,
      "name": "SRV docked",
      "description": "Triggered when you dock an SRV with your ship"
    },
    "SRV launched": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Buggy\", \"SRV\")} {OneOf(\"largué\", \"en partance\")}.",
      "default": true,
      "name": "SRV launched",
      "description": "Triggered when you launch an SRV from your ship"
    },
    "Star report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch from context }\r\n{set reportbody to BodyDetails(state.eddi_context_star_star, state.eddi_context_star_system)}\r\n\r\n{if !reportbody.name || reportbody.name = \"\":\r\n    Je ne voit pas de quelle étoile vous demandez des données.\r\n|else:\r\n    {set mainsequence to 0}\r\n    \r\n    {if reportbody.stellarclass = \"O\":\r\n        étoile de type oh, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n  Il s’agit d’étoiles extrêmes.  les plus chaudes, les plus bleues, les plus brillantes, les plus massives… et rares! Le système de classement de type O est ouvert: il peut évoluer selon les découvertes.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"B\":\r\n        Une étoile de type Bé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Ces étoiles sont de véritables phares dans le ciel: parmi les 100 étoiles les plus brillantes, un tier sont des étoiles de type B. Ces étoiles sont très chaudes, bleues et émettent de fortes radiations ultraviolettes.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"A\":\r\n        Une étoile de type ah, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles blanches assez répandues.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"F\":\r\n        Une étoile de type èfe, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles blanc-jaune assez répandues.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"G\":\r\n        Une étoile de type gé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles jaunes comme il y a pour le système Sol.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"K\":\r\n        Une étoile de type Ka, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles orange très répandu.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"M\":\r\n        Une étoile de type ème, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles rouges et froides dont les plus connues sont Betelgueuse ou Antarès.  Toutes les étoiles M visibles à l’œil nu sont des supergéantes.\r\n        {set mainsequence to 1}\r\n    |elif reportbody.stellarclass = \"L\":\r\n        étoile de type elle, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoile de couleur rouge très foncé et illuminent surtout dans l’infrarouge. Leurs gaz sont assez froids pour que les hydrures de métaux et les métaux alcalins prédominent dans leur spectre.\r\n    |elif reportbody.stellarclass = \"T\":\r\n        une naine brune Té, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... . Étoiles à peine assez massives pour pouvoir effectuer des réactions nucléaires. Elles émettent peu ou pas de lumière, mais seulement des infrarouges. \r\n    |elif reportbody.stellarclass = \"Y\":\r\n        Naine brune Igrec, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... elles se trouvent à l’extrémité de l’échelle, elles sont plus froides que celles de la classe spectrale T.\r\n    |elif reportbody.stellarclass = \"TTS\":\r\n        une étoile Té tauri, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  en phase de contraction gravitationnelle\r\n    |elif reportbody.stellarclass = \"AeBe\":\r\n        une proto étoile très jeune pour être en position principale {Occasionally(4, \"mais pourrai devenir une étoile de type Ah ou Bé\")}., de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"W\":\r\n        une étoile de type doublevé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  est plutôt agée {Occasionally(4, \"approchant de sa fin de vie et ne consommant plus d'hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"WN\":\r\n        une étoile agée de type doublevé ène, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"approchant de sa fin de vie et ne consommant plus d'hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"WNC\":\r\n        une étoile agée de type doublevé ène cé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... {Occasionally(4, \"approchant de sa fin de vie et ne consommant plus d'hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"WC\":\r\n        une étoile agée de type doublevé cé{Occasionally(4, \"approchant de sa fin de vie et ne consommant plus d'hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"WO\":\r\n        une étoile agée de type doublevé oh, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"approchant de sa fin de vie et ne consommant plus d'hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"CS\":\r\n        une étoile carbonnée de type cé esse, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"C\":\r\n        une étoile carbonnée de type cé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(2, \"basse-séquence\")} {Occasionally(4, \"avec une atmosphère principalement de carbone\")}.\r\n    |elif reportbody.stellarclass = \"CN\":\r\n        une étoile carbonnée de type cé ène, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(2, \"basse-séquence\")} {Occasionally(4, \"avec une atmosphère principalement de carbone\")}.\r\n    |elif reportbody.stellarclass = \"CJ\":\r\n        une étoile carbonnée de type cé ji, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(2, \"basse-séquence\")} {Occasionally(2, \"avec une atmosphère principalement de carbone\")}.\r\n    |elif reportbody.stellarclass = \"CH\":\r\n        une étoile carbonnée de type cé hache, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(2, \"basse-séquence\")} {Occasionally(4, \"avec une atmosphère principalement de carbone\")}.\r\n    |elif reportbody.stellarclass = \"CHd\":\r\n        une étoile carbonnée de type Cé Hache dé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(2, \"basse-séquence\")} {Occasionally(4, \"avec une atmosphère principalement de carbone\")}.\r\n    |elif reportbody.stellarclass = \"MS\":\r\n        une étoile basses séquence de type M S, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui était une étoile de type M et deviendra une étoile carbonnéer\")}.\r\n    |elif reportbody.stellarclass = \"S\":\r\n        une étoile basses séquence de type esse, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui était une étaoile de type èm et deviendra une étoile carbonnéer\")}.\r\n    |elif reportbody.stellarclass = \"D\":\r\n        Une naine blanche de type dé, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... .\r\n    |elif reportbody.stellarclass = \"DA\":\r\n        une naine blanche de type dé ah, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"avec une atmosphere riche en hydrogène\")}\r\n    |elif reportbody.stellarclass = \"DAB\":\r\n        une naine blanche de type Dé Ah bé {Occasionally(4, \"avec une atmosphere riche en hydrogène\")}.\r\n    |elif reportbody.stellarclass = \"DAO\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DAZ\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DAV\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DB\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DBZ\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DBV\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DO\":\r\n        Une naine blanche\r\n    |elif reportbody.stellarclass = \"DOV\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DQ\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DC\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DCV\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"DX\":\r\n        Une naine blanche, de classe de luminosité {Spacialise(reportbody.luminosityClass)}... \r\n    |elif reportbody.stellarclass = \"N\":\r\n        une étoile à neutron , de classe de luminosité {Spacialise(reportbody.luminosityClass)}... {Occasionally(4, \"qui a un noyau dangeureusement dense\")}.\r\n    |elif reportbody.stellarclass = \"H\":\r\n        un trou noir.\r\n    |elif reportbody.stellarclass = \"X\":\r\n        une entité stélaire exotique.\r\n    |elif reportbody.stellarclass = \"SuperMassiveBlackHole\":\r\n         une trou noir supermassif.\r\n    |elif reportbody.stellarclass = \"A_BlueWhiteSuperGiant\":\r\n        une bleue-blanc supermassive, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui continura son extention jusqu'à devenir une super géante rouge\")}.\r\n    |elif reportbody.stellarclass = \"F_WhiteSuperGiant\":\r\n        une blanc-jaune supermassive, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui continura son extention jusqu'à devenir une super géante rouge\")}\r\n    |elif reportbody.stellarclass = \"M_RedSuperGiant\":\r\n        une super géante rouge, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"en phase de consomation d'hélium\")}.\r\n    |elif reportbody.stellarclass = \"M_RedGiant\":\r\n        une géante rouge, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui continu son évolution vers la super géante rouge\")}.\r\n    |elif reportbody.stellarclass = \"K_OrangeGiant\":\r\n        une géante orange, de classe de luminosité {Spacialise(reportbody.luminosityClass)}...  {Occasionally(4, \"qui continue à ce développer ainsi jusqu'à sa mort\")}.\r\n    |elif reportbody.stellarclass = \"RoguePlanet\":\r\n        a rogue planet\r\n    |elif reportbody.stellarclass = \"Nebula\":\r\n        une nébuleuse.\r\n    |elif reportbody.stellarclass = \"StellarRemnantNebula\":\r\n        un vestige de nébuleuse.\r\n    }\r\n\r\n    {OneOf(\"qui a {Humanise(reportbody.age)} années\",\r\n           \"née depuis {Humanise(reportbody.age)} ans\",\r\n           \"d'un àge estimè à {Humanise(reportbody.age)} ans\",\r\n    )}\r\n    {if reportbody.age < 1000000:\r\n        ce qui en fait ne des plus jeune de la galaxie.\r\n    |elif reportbody.age >14000000000:\r\n        ce qui fait d'elle une des plus vieille de la galaxie.\r\n    }.\r\n\r\n    {if mainsequence = 1:\r\n        {OneOf('.','.','Comme vous pouvez le constater, elle émet une lumière {set translate to reportbody.chromaticity} {F(\"Translate Color\")}.')}\r\n\r\n        {set notables to []}\r\n\r\n        {if reportbody.massprobability < 0.01:\r\n            {set notables to cat(notables, [cat(\"une masse solaire incroyablement faible de \", Humanise(reportbody.solarmass))])}\r\n        |elif reportbody.massprobability <0.1:\r\n            {set notables to cat(notables, [cat(\"une masse solaire faible de \", Humanise(reportbody.solarmass))])}\r\n        |elif reportbody.massprobability <1:\r\n            {set notables to cat(notables, [\"une masse solaire peu courante de \"])}\r\n        |elif reportbody.massprobability <10:\r\n            {set notables to cat(notables, [\"une masse solaire inférieure à la myenne\"])}\r\n        |elif reportbody.massprobability > 99.99:\r\n            {set notables to cat(notables, [cat(\"une masse solaire incroyablement haute de \", Humanise(reportbody.solarmass))])}\r\n        |elif reportbody.massprobability > 99.9:\r\n            {set notables to cat(notables, [cat(\"une masse solaire extrèmement haute de \", Humanise(reportbody.solarmass))])}\r\n        |elif reportbody.massprobability > 99:\r\n            {set notables to cat(notables, [\"une masse solaire particulièrement haute de \"])}\r\n        |elif reportbody.massprobability > 90:\r\n            {set notables to cat(notables, [\"une masse solaire juste au dessus de la moyenne\"])}\r\n        }\r\n\r\n        {if reportbody.radiusprobability < 0.01:\r\n            {set notables to cat(notables, [cat(\"Un rayon solaire incroyablement bas de \", Humanise(reportbody.solarradius))])}\r\n        |elif reportbody.radiusprobability <0.1:\r\n            {set notables to cat(notables, [cat(\"Un rayon solaire extrêmement faible de \", Humanise(reportbody.solarradius))])}\r\n        |elif reportbody.radiusprobability <1:\r\n            {set notables to cat(notables, [\"Un rayon solaire exceptionnellement faible\"])}\r\n        |elif reportbody.radiusprobability <10:\r\n            {set notables to cat(notables, [\"Rayon solaire inférieur à la moyenne\"])}\r\n        |elif reportbody.radiusprobability > 99.99:\r\n            {set notables to cat(notables, [cat(\"Un rayon solaire extrêmement élevé de \", Humanise(reportbody.solarradius))])}\r\n        |elif reportbody.radiusprobability > 99.9:\r\n            {set notables to cat(notables, [cat(\"Un rayon solaire incroyablement élevé de \", Humanise(reportbody.solarradius))])}\r\n        |elif reportbody.radiusprobability > 99:\r\n            {set notables to cat(notables, [\"Un rayon solaire exceptionnellement élevé\"])}\r\n        |elif reportbody.radiusprobability > 90:\r\n            {set notables to cat(notables, [\"un rayon solaire plus grand que la moyenne\"])}\r\n        }\r\n        {set temp to reportbody.temperature - 273.15} \r\n        {if reportbody.tempprobability < 0.01:\r\n            {set notables to cat(notables, [cat(\"Une température de surface incroyablement basse de \", Humanise(temp), \" Degrés Celsius\")])}\r\n        |elif reportbody.tempprobability <0.1:\r\n            {set notables to cat(notables, [cat(\"Une température superficielle extrêmement faible de \", Humanise(temp), \" Degrés Celsius\")])}\r\n        |elif reportbody.tempprobability <1:\r\n            {set notables to cat(notables, [\"Une température de surface exceptionnellement faible\"])}\r\n        |elif reportbody.tempprobability <10:\r\n            {set notables to cat(notables, [\"Température de surface inférieure à la moyenne\"])}\r\n        |elif reportbody.tempprobability > 99.99:\r\n            {set notables to cat(notables, [cat(\"Une température de surface extrêmement élevée de \", Humanise(temp), \" Degrés Celsius\")])}\r\n        |elif reportbody.tempprobability > 99.9:\r\n            {set notables to cat(notables, [cat(\"Une température de surface incroyablement élevée de \", Humanise(temp), \" Degrés Celsius\")])}\r\n        |elif reportbody.tempprobability > 99:\r\n            {set notables to cat(notables, [\"Une température de surface exceptionnellement élevée\"])}\r\n        |elif reportbody.tempprobability > 90:\r\n            {set notables to cat(notables, [\"Température de surface supérieure à la moyenne\"])}\r\n        }\r\n\r\n        {if len(notables) = 0:\r\n            {OneOf(\"\", \"un exemple classique de ce type d'étoile.\", \"Rien de particulier relevé sur cette étoile.\", \"rapport de particularité èr ah ess.\")}\r\n        |else:\r\n            {OneOf('comparé aux autres étoiles de ce type', 'en comparaison aux autres étoiles {reportbody.stellarclass} ', 'par rapport aux autres étoiles {reportbody.stellarclass} ')}, celle ci est \r\n            {if len(notables) = 1:\r\n                remarquable pour avoir {notables[0]}.\r\n            |elif len(notables) = 2:\r\n                {OneOf('intéressante', 'inhabituelle')}, avec {notables[0]} et {notables[1]}.\r\n            |elif len(notables) = 3:\r\n                {OneOf('exceptionnelle', 'remarquable')}, avec {notables[0]}, {notables[1]} et {notables[2]}.\r\n            }\r\n        }\r\n    }    \r\n} ",
      "default": false,
      "name": "Star report",
      "description": "Function to report on the details of the contextual body"
    },
    "Star scanned": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'star')}\r\n{SetState('eddi_context_last_action', 'scan')}\r\n{SetState('eddi_context_star_system', system.name)}\r\n{SetState('eddi_context_star_star', event.name)}\r\n\r\n{Pause(1000)}\r\n\r\nScann de l'étoile {event.stellarclass}-class star {P(event.name)} terminé.\r\n\r\n{F(\"Star report\")}\r\n",
      "default": true,
      "name": "Star scanned",
      "description": "Triggered when you complete a scan of a stellar body"
    },
    "Station no fire zone entered": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Station no fire zone entered",
      "description": "Triggered when your ship enters a station's no fire zone"
    },
    "Station no fire zone exited": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "Station no fire zone exited",
      "description": "Triggered when your ship exits a station's no fire zone"
    },
    "Station report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "Nothing of interest here.",
      "default": true,
      "name": "Station report",
      "description": "Function to report on the details of the current station"
    },
    "Swapout check": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Function to find a given module in outfitting}\r\n{set outfitting(module) to:\r\n    {for outfittingmodule in station.outfitting:\r\n        {if outfittingmodule.EDDBID = module.EDDBID:\r\n            {return outfittingmodule}\r\n        }\r\n    }\r\n}\r\n\r\n{_ Function to report if a module is cheaper in outfitting that on the ship}\r\n{set reportIfCheaper(shipmodule) to:\r\n    {_ Only consider if this has no modifications}\r\n    {if !shipmodule.modified:\r\n        {set outfittingmodule to outfitting(shipmodule)}\r\n        {if outfittingmodule:\r\n            {if outfittingmodule.price < shipmodule.price:\r\n                {set saving to shipmodule.price - outfittingmodule.price}\r\n                {_ Only bother if it's a relatively good saving}\r\n                {if saving / cmdr.credits > 0.001:\r\n                    Vous pouvez économiser {Humanise(saving)} crédits échangeant votre module {shipmodule.name} ici.\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n{reportIfCheaper(ship.powerplant)}\r\n{reportIfCheaper(ship.thrusters)}\r\n{reportIfCheaper(ship.frameshiftdrive)}\r\n{reportIfCheaper(ship.lifesupport)}\r\n{reportIfCheaper(ship.powerdistributor)}\r\n{reportIfCheaper(ship.sensors)}\r\n{for hardpoint in ship.hardpoints:\r\n    {if hardpoint.module:\r\n        {reportIfCheaper(hardpoint.module)}\r\n    }\r\n}\r\n{for compartment in ship.compartments:\r\n    {if compartment.module:\r\n        {reportIfCheaper(compartment.module)}\r\n    }\r\n}\r\n",
      "default": true,
      "name": "Swapout check",
      "description": "Check to see if any fitted modules are available more cheaply here"
    },
    "Synthesised": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "\r\n{OneOf('synthése effectuée','Processus de synthèse réussi','Synthèse terminée')}.",
      "default": true,
      "name": "Synthesised",
      "description": "Triggered when you synthesise something from materials"
    },
    "System distance report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch from context }\r\n{set reportsystem to SystemDetails(state.eddi_context_system_system)}\r\n\r\n{if !reportsystem.name || reportbody.name = \"\":\r\n    Je ne vois pas de quel système vous voulez parler.\r\n|else:\r\n    La distance vers {P(reportsystem.name)} est de {Humanise(Distance(reportsystem.x, reportsystem.y, reportsystem.z, system.x, system.y, system.z))} années lumières.\r\n}\r\n\r\n\r\n\r\n",
      "default": true,
      "name": "System distance report",
      "description": "Function to report on the distance to the contextual system"
    },
    "System faction changed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": null,
      "default": true,
      "name": "System faction changed",
      "description": "Triggered when there is a change in the controlling faction of a watched system"
    },
    "System report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch from context }\r\n{set reportsystem to SystemDetails(state.eddi_context_system_system)}\r\n\r\n{if !reportsystem.name || reportbody.name = \"\":\r\nJe n'ai pas de système en mémoire pour lequel vous donner des informations.\r\n|else:\r\n{P(reportsystem.name)} est un système\r\n\r\n{if reportsystem.population && reportsystem.population > 0:\r\n{if reportsystem.allegiance = \"Federation\":\r\n{OneOf(\"de la Fédération\",\"fédéral\",\"Dalléjance fédérale\")},\r\n|elif reportsystem.allegiance = \"Empire\":\r\n{OneOf(\"Impérial\",\"de lempire\",\"dallégeance impériale\")}\r\n|else:\r\n{OneOf(\"Indépendant\",\"non-alligné\")},\r\n}\r\n{if reportsystem.government:\r\ndont le gouvernement est de type :{set translate to reportsystem.government} {F(\"Translate Government\")},\r\n|else:\r\n,\r\n}\r\n{OneOf(\"abritant \", \"ayant une population de \", \"étant le foyer de \", \"comportant \", \"composé de \")} {Humanise(reportsystem.population)} {OneOf(\"personnes\", \"habitants\")}\r\n{if reportsystem.power:\r\n, {OneOf(\"dirigé par \", \"allié avec \", \"contrôlé par \")} {P(reportsystem.power)}\r\n}.\r\n\r\n{if reportsystem.faction:\r\n{P(reportsystem.faction)} est {OneOf(\"la puissance \", \"la faction \", \"le groupe \", \"la corpo \")}{OneOf(\"ayant le contrôle \", \"locale \", \"principale \")} ici.\r\n}\r\n\r\n{if len(reportsystem.stations) = 0:\r\nIl ny a pas de station présente.\r\n|else:\r\n{if len(reportsystem.orbitalstations) = 0:\r\n{if len(reportsystem.planetarystations) = 1:\r\nIl y a {OneOf(\"une seule\", \"une unique\", \"juste une\")} station planétaire\r\n|else:\r\nil y a {len(reportsystem.planetarystations)} stations planétaires\r\n}\r\n|elif len(reportsystem.orbitalstations) = 1:\r\nIl y a {OneOf(\"une seule\", \"une unique\", \"une\")} station orbitale\r\n{if len(reportsystem.planetarystations) = 1:\r\net une station planétaire\r\n|elif len(reportsystem.planetarystations) > 1:\r\net {len(reportsystem.planetarystations)} stations planétaires\r\n}\r\n|else:\r\nil y a {len(reportsystem.orbitalstations)} stations orbitale\r\n{if len(reportsystem.planetarystations) = 1:\r\net {OneOf(\"une seule\", \"une\")} station planétaire\r\n|elif len(reportsystem.planetarystations) > 1:\r\net {len(reportsystem.planetarystations)} stations planétaires\r\n}\r\n}\r\n}\r\n{OneOf(\"ici\",\"dans ce système\",\"localement\")}\r\n|else:\r\nCe système semble dépeuplé\r\n}.\r\n}",
      "default": false,
      "name": "System report",
      "description": "Function to report on the details of the contextual star system"
    },
    "System state changed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n\r\n{SetState('eddi_context_last_subject', 'system')}\r\n{SetState('eddi_context_last_action', 'change_state')}\r\n{SetState('eddi_context_system', event.system)}\r\n{SetState('eddi_context_system_system', event.system)}\r\n\r\n{_ Set up our system name}\r\n{if event.system = homesystem.name:\r\n  {set system to OneOf('{P(event.system)}',\r\n                       'Votre système habitat')}\r\n|elif event.system = system.name:\r\n  {set system to OneOf('{P{event.system)}',\r\n                       'ce système où vous êtes')}\r\n|else:\r\n  {set system to OneOf('le système {P(event.system)}'\r\n                       '{P(event.system)}'))}\r\n}\r\n\r\n{if event.newstate != 'None':\r\n  {_ System has entered a new state}\r\n  {OneOf('Restez à la pointe de lactualité et de la technologie avec Rèmlok Industries! :','Les nouvelles vous sont offertes par Gal net point F R! le meilleurs site dinformation de la galaxie!','','élite-dangerouss.fr, pour tout savoir sur la galaxie et plus encore vous offre cette news!','','Le Discord Déhessène, le discord des explorateurs a une transmission pour vous :','',',','Une transmition locale rapporte que ', 'Information: ', 'Transmission interceptée.  Le contenu indique que ','Le coup de la panne?. pas de panic les S.T.A.R sont là pour vous aidez!.')}\r\n  {if event.newstate = 'Boom':\r\n    {OneOf('{system} connait un boum économique','{system} connait un boum économique, cest le moment pour y commercer','{system} connait un boum économique, voir comment y investir','{system} entre dans une période de grands succés commerciaux','{system} entre dans une période de grands succés commerciaux, cest le moment di  spéculer','{system} entre dans une période de grands succés commerciaux, voir comment y investir')}\r\n  |elif event.newstate = 'Bust':\r\n    {system} Éprouve des difficultés économiques.\r\n  |elif event.newstate = 'Civil Unrest':\r\n    {OneOf('{system} Éprouve des troubles civils',\r\n           'Il y a des troubles dans le système {system}')}\r\n  |elif event.newstate = 'Civil War':\r\n    {OneOf('{system} Est en guerre avec une autre faction dans le même système',\r\n           'La guerre civile a éclaté à {system}',\r\n           '{system} est maintenant en guerre civile',\r\n           'Les hostilités ont éclaté dans {system}')}\r\n  |elif event.newstate = 'Election':\r\n    {system} est en precessus électoral\r\n  |elif event.newstate = 'Expansion':\r\n    {OneOf('Une faction dans {system} essaie de se développer vers un système voisin',\r\n           'Une faction dans {system} se prépare à se développer vers un système voisin')}\r\n  |elif event.newstate = 'Famine':\r\n    {system} subie une famine\r\n  |elif event.newstate = 'Investment':\r\n    La faction de contrôlant {system} investit fortement dans son infrastructure locale\r\n  |elif event.newstate = 'Lockdown':\r\n    {system} a accru la sécurité en raison dun blocus par la faction y aillant le contrôle\r\n  |elif event.newstate = 'Outbreak':\r\n    {system} souffre dune épidémie virale ou bactérienne sévère. \r\n  |elif event.newstate = 'Retreat':\r\n    La faction contrôlant {system} se retire dun système voisin\r\n  |elif event.newstate = 'War':\r\n    {system} est désormais en guerre avec un système voisin\r\n  |else:\r\n    {OneOf('{system} est entré en {event.state}',\r\n           '{system} est maintenant dans un état de {event.state}')}\r\n  }.\r\n}",
      "default": false,
      "name": "System state changed",
      "description": "Triggered when there is a change in the state of a watched system"
    },
    "System state report": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ Fetch from context }\r\n{set reportsystem to SystemDetails(state.eddi_context_system_system)}\r\n\r\n{if !reportsystem.name || reportbody.name = \"\":\r\n Je ne sais pas au sujet de quel système les données sont demandées.\r\n|else:\r\n {P(reportsystem.name)}\r\n {if reportsystem.state = \"None\":\r\n  n'a rien de particulier actuellement\r\n |elif reportsystem.state = \"Retreat\":\r\n  est en retraite\r\n |elif reportsystem.state = \"War\":\r\n  est en guerre; la prudence est de rigueur\r\n |elif reportsystem.state = \"Boom\":\r\n  est en plein boum commercial; Il y a surement de bons bénéfices à y faire\r\n |elif reportsystem.state = \"Civil Unrest\":\r\n  Il y a des troubles civils; la prudence est de rigueur\r\n |elif reportsystem.state = \"Civil War\":\r\n  est en guerre civile; la prudence est de rigueur\r\n |elif reportsystem.state = \"Famine\":\r\n  Subie une famine; la prudence est de rigueur\r\n |elif reportsystem.state = \"Lockdown\":\r\n  est en état d'urgence; la prudence est de rigueur\r\n |elif reportsystem.state = \"Outbreak\":\r\n  tente de contenir une épidémie sérieuse; la prudence est de rigueur\r\n |elif reportsystem.state = \"Expension\":\r\n  se prépare à se développer vers un autre système\r\n |elif reportsystem.state = \"Bust\":\r\n  est en faillite économique\r\n |elif reportsystem.state = \"Élections\":\r\n  est en plein processus électoral\r\n |elif reportsystem.state = \"Investment\":\r\n  investi lourdement dans ses infrastuctures\r\n |else:\r\n }\r\n.\r\n}",
      "default": false,
      "name": "System state report",
      "description": "Report on the current state of the contextual system"
    },
    "Touchdown": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "Attérissage réussi.\r\n\r\n{Pause(2000)}\r\n\r\nLes coordonnées sont de {event.longitude} degrés de longitude, {event.latitude} degrés de latitude.",
      "default": true,
      "name": "Touchdown",
      "description": "Triggered when your ship touches down on a planet's surface"
    },
    "Trade data purchased": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'tradedata')}\r\n{SetState('eddi_context_last_action', 'buy')}\r\n{SetState('eddi_context_tradedata_name', event.system)}\r\n\r\n{OneOf(\"Données commerciales achetées pour le systèmes {P(event.system)}\",\r\n            \"les données commerciales pour {P(event.system)} sont maintenant enregistrées\",\r\n            \"Les données commerciales de (event.system)} ont été envoyées par les services éconamiques de la station\",\r\n            \"Réception des données commerciales de {P(event.system)} confirmée\")}.",
      "default": true,
      "name": "Trade data purchased",
      "description": "Triggered when you purchase trade data"
    },
    "Trade promotion": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf('Vos capacités commerciales vous ont portées au titre de','Grace à vos bénéfices commerciaux, vous avez gagné le rang de')} {F(\"Honorific\")}.",
      "default": true,
      "name": "Trade promotion",
      "description": "Triggered when your trade rank increases"
    },
    "Trade voucher redeemed": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{_ Context }\r\n{SetState('eddi_context_last_subject', 'trade_voucher')}\r\n{SetState('eddi_context_last_action', 'redeem')}\r\n{SetState('eddi_context_trade_voucher_amount', event.amount)}\r\n\r\nTrade vouchers for {Humanise(event.amount)} credits redeemed\r\n{Occasionally(2, \"\r\n  {if len(event.rewards) = 1:\r\n    by {P(event.rewards[0].faction)}\r\n  |else:\r\n    by\r\n    {set cur to 0}\r\n    {while cur < len(event.rewards):\r\n        {if cur = 0:\r\n        |elif cur < len(event.rewards) - 1:\r\n            , \r\n        |else:\r\n            and\r\n        }\r\n        {P(event.rewards[cur].faction)}\r\n        {set cur to cur + 1}\r\n    }\r\n  }\r\n\")}.\r\n",
      "default": true,
      "name": "Trade voucher redeemed",
      "description": "Triggered when you redeem a trade voucher"
    },
    "Translate Blueprint": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ set translate to \"Copper\"}\r\n\r\n{set TranslationName to []}\r\n{set TranslationModule to []}\r\n{set Translate to []}\r\n\r\n{_ traduction des noms}\r\n{\r\n if translate1 = \"Long range\": {set TranslationName to \"Longue portée\"}\r\n |elif translate1 = \"Lightweight\": {set TranslationName to \"Allégée\"}\r\n |elif translate1 = \"Low emissions\": {set TranslationName to \"Faible émission\"}\r\n |elif translate1 = \"Blast resistant\": {set TranslationName to \"Anti-explosion\"}\r\n |elif translate1 = \"Kinetic resistant\": {set TranslationName to \"Anti-cinétique\"}\r\n |elif translate1 = \"Thermal resistant\": {set TranslationName to \"Anti-thermique\"}\r\n |elif translate1 = \"Focused\": {set TranslationName to \"Tir Concentré\"}\r\n |elif translate1 = \"Faster boot sequence\": {set TranslationName to \"Démarrage accéléré\"}\r\n |elif translate1 = \"Overcharged\": {set TranslationName to \"surchargé\"}\r\n |elif translate1 = \"Charge enhanced\": {set TranslationName to \"capacité de charge augmenté\"}\r\n |elif translate1 = \"Heavy duty\": {set TranslationName to \"lourd\"}\r\n |elif translate1 = \"Specialised\": {set TranslationName to \"Spécialisé\"}\r\n |elif translate1 = \"High capacity\": {set TranslationName to \"Grande capacité\"}\r\n |elif translate1 = \"Wide angle\": {set TranslationName to \"Grand angle\"}\r\n |elif translate1 = \"Clean\": {set TranslationName to \"Optimisation propre\"}\r\n |elif translate1 = \"Enhanced low power\": {set TranslationName to \"Faible émission\"}\r\n |elif translate1 = \"Fast scan\": {set TranslationName to \"Rapide\"}\r\n |elif translate1 = \"Shielded\": {set TranslationName to \"protégé\"}\r\n |elif translate1 = \"Reinforced\": {set TranslationName to \"Renforcé\"}\r\n |elif translate1 = \"Efficient\": {set TranslationName to \"Efficace\"}\r\n |elif translate1 = \"Double shot\": {set TranslationName to \"Tir double\"}\r\n |elif translate1 = \"Armoured\": {set TranslationName to \"Blindé\"}\r\n |elif translate1 = \"Increased range\": {set TranslationName to \"Portée Augmenté\"}\r\n |elif translate1 = \"Expanded capture arc\": {set TranslationName to \"Angle de capture augmenté\"}\r\n |elif translate1 = \"Sturdy\": {set TranslationName to \"solide\"}\r\n |elif translate1 = \"Resistance augmented\": {set TranslationName to \"Augmentation résistance\"}\r\n |elif translate1 = \"Rapid charge\": {set TranslationName to \"rechargement rapide\"}\r\n |elif translate1 = \"High charge capacity\": {set TranslationName to \"capacité de charge élevée\"}\r\n |elif translate1 = \"Rapid fire\": {set TranslationName to \"tir rapide\"}\r\n |elif translate1 = \"Dirty\": {set TranslationName to \"Optimisation détèriorante\"}\r\n |elif translate1 = \"Short range\": {set TranslationName to \"Courte portée\"}\r\n |elif translate1 = \"Ammo capacity\": {set TranslationName to \"Capacité chargeur munition\"}\r\n}\r\n\r\n{_ traduction des modules}\r\n\r\n{  \r\n if translate2 = \"Bulkheads\": {set TranslationModule to \"Coque\"}\r\n |elif translate2 = \"Weapon\": {set TranslationModule to \"Armement\"}\r\n |elif translate2 = \"Heat sink launcher\": {set TranslationModule to \"Dissipateur thermique\"}\r\n |elif translate2 = \"Hull reinforcement\": {set TranslationModule to \"Renforts de coque\"}\r\n |elif translate2 = \"Chaff launcher\": {set TranslationModule to \"Lanceur de paillettes\"}\r\n |elif translate2 = \"Frame shift wake scanner\": {set TranslationModule to \"Détecteur de sillage FSD\"}\r\n |elif translate2 = \"Fuel scoop\": {set TranslationModule to \"Récupérateur de carburant\"}\r\n |elif translate2 = \"Fuel transfer limpet controller\": {set TranslationModule to \"Drone de ravitaillement\"}\r\n |elif translate2 = \"Auto field mainentance unit\": {set TranslationModule to \"Unité de Maintenance\"}\r\n |elif translate2 = \"Cargo scanner\": {set TranslationModule to \"Scanneur de cargaison\"}\r\n |elif translate2 = \"Collector limpet controller\": {set TranslationModule to \"Contrôle de drone collecteur\"}\r\n |elif translate2 = \"Electronic counter measures\": {set TranslationModule to \"Contre mesure électronique\"}\r\n |elif translate2 = \"Frame shift drive\": {set TranslationModule to \"Réacteur F S D\"}\r\n |elif translate2 = \"Hatch breaker limpet controller\": {set TranslationModule to \"Contrôleur de drone perce soute\"}\r\n |elif translate2 = \"Kill warrant scanner\": {set TranslationModule to \"Détecteur d'avis de recherche\"}\r\n |elif translate2 = \"Life support\": {set TranslationModule to \"Système de survie\"}\r\n |elif translate2 = \"Point defence\": {set TranslationModule to \"Défence ponctuelle\"}\r\n |elif translate2 = \"Power distributor\": {set TranslationModule to \"Répartiteur de puissance\"}\r\n |elif translate2 = \"Prospector limpet controller\": {set TranslationModule to \"Contrôleur de drone prostecteur\"}\r\n |elif translate2 = \"Refinery\": {set TranslationModule to \"Rafinerie\"}\r\n |elif translate2 = \"Thrusters\": {set TranslationModule to \"Moteurs\"}\r\n |elif translate2 = \"Power plant\": {set TranslationModule to \"Générateurs\"}\r\n |elif translate2 = \"Detailed surface scanner\": {set TranslationModule to \"Détecteur de surface\"}\r\n |elif translate2 = \"Shield generator\": {set TranslationModule to \"Générateur de bouclier\"}\r\n |elif translate2 = \"Wake scanner\": {set TranslationModule to \"Détecteur de saut\"}\r\n |elif translate2 = \"interdictor\": {set TranslationModule to \"Intercepteur\"}\r\n |elif translate2 = \"Sensors\": {set TranslationModule to \"Capteurs\"}\r\n |elif translate2 = \"Shield booster\": {set TranslationModule to \"Survolteur de bouclier\"}\r\n |elif translate2 = \"Shield cell bank\": {set TranslationModule to \"Réserve de cellule d'énergie\"}\r\n |elif translate2 = \"Frame shift drive interdictor\": {set TranslationModule to \"Intercepteur F S D\"}\r\n}\r\n\r\n{if TranslationModule:\r\n {if TranslationName:\r\n  {set Translate to cat(TranslationModule,' ',TranslationName)}\r\n |else:\r\n  {set Translate to cat(TranslationModule,' ',translate2)}\r\n }\r\n|else:\r\n {if TranslationName:\r\n  {set Translate to cat(translate1,' ',TranslationName)}\r\n |else:\r\n  {set Translate to cat(translate2,' ',translate1)}\r\n }\r\n}\r\n  \r\n\r\n{if Translate: {Translate} |else: {translate2} {translate1}}\r\n\r\n",
      "default": true,
      "name": "Translate Blueprint",
      "description": null
    },
    "Translate Color": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "\r\n{set Translation to []}\r\n\r\n{  if translate = \"orange-red\"     : {set Translation to \"rouge orangé\"}\r\n|elif translate = \"yellow-orange\"     : {set Translation to \"jaune orangé\"}\r\n|elif translate = \"white\"     : {set Translation to \"Blanche\"}\r\n|elif translate = \"blue-white\"     : {set Translation to \"Blanc-bleue\"}\r\n|elif translate = \"yellow-white\"     : {set Translation to \"blanc-jaune\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": true,
      "name": "Translate Color",
      "description": "pour avoir les couleurs émises en français"
    },
    "Translate Commodities": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set Translation to []}\r\n\r\n{\r\nif translate = \"Algea\" : {set Translation to \"Algues\"}\r\n|elif translate = \"Coffee\" : {set Translation to \"Café\"}\r\n|elif translate = \"Food Cartridges\" : {set Translation to \"Cartouches alimentaires\"}\r\n|elif translate = \"Cereals\" : {set Translation to \"Céréales\"}\r\n|elif translate = \"Fruits and vegetables\" : {set Translation to \"Fruits et légumes\"}\r\n|elif translate = \"Fish\" : {set Translation to \"Poisson\"}\r\n|elif translate = \"Tea\" : {set Translation to \"Thé\"}\r\n|elif translate = \"Animal Meat\" : {set Translation to \"Viande Animale\"}\r\n|elif translate = \"Synthetic Meat\" : {set Translation to \"Viande synthétique\"}\r\n|elif translate = \"Personal Weapons\" : {set Translation to \"Armes de poing\"}\r\n|elif translate = \"Landmines\" : {set Translation to \"Mines terrestres\"}\r\n|elif translate = \"Non-lethal Weapons\" : {set Translation to \"Armes non léthales\"}\r\n|elif translate = \"Battle Weapons\" : {set Translation to \"Armes Militaires\"}\r\n|elif translate = \"Reactive Armour\" : {set Translation to \"Protection réactive\"}\r\n|elif translate = \"Beer\" : {set Translation to \"Bière\"}\r\n|elif translate = \"Spirits\" : {set Translation to \"Spiritueux\"}\r\n|elif translate = \"Tabacco\" : {set Translation to \"Tabac\"}\r\n|elif translate = \"Wine\" : {set Translation to \"Vin\"}\r\n|elif translate = \"Narcotics\" : {set Translation to \"Narcotiques\"}\r\n|elif translate = \"Organic Waste\" : {set Translation to \"Déchets organiques\"}\r\n|elif translate = \"Biowaste\" : {set Translation to \"Biodéchets\"}\r\n|elif translate = \"Scrap\" : {set Translation to \"Féraille\"}\r\n|elif translate = \"Radioactive Waste\" : {set Translation to \"Matériaux radioactifs\"}\r\n|elif translate = \"Imperial Slaves\" : {set Translation to \"Esclaves impériaux\"}\r\n|elif translate = \"Slaves\" : {set Translation to \"Esclaves\"}\r\n|elif translate = \"Occupied Escape Pod\" : {set Translation to \"Nacelle dévacuation occupées\"}\r\n|elif translate = \"Building Fabricators\" : {set Translation to \"Auto-batisseurs\"}\r\n|elif translate = \"Auto-Fabricators\" : {set Translation to \"Dispositif dauto fabrication\"}\r\n|elif translate = \"Structural Regulators\" : {set Translation to \"Régulateurs struturels\"}\r\n|elif translate = \"Animal Monitors\" : {set Translation to \"Système de surveillance animale\"}\r\n|elif translate = \"Aquaponic Systems\" : {set Translation to \"Systèmes aquaponiques\"}\r\n|elif translate = \"Medical Diagnostic Equipment\" : {set Translation to \"équipement de diagnostic médicaux\"}\r\n|elif translate = \"Power Generators\" : {set Translation to \"Générateurs\"}\r\n|elif translate = \"Crop Harvesters\" : {set Translation to \"Moissoneuses\"}\r\n|elif translate = \"Atmospheric Processors\" : {set Translation to \"Processeur atmosphériques\"}\r\n|elif translate = \"Microbial Furnaces\" : {set Translation to \"Hauts fourneaux microbiens\"}\r\n|elif translate = \"Water Purificators\" : {set Translation to \"Purificateurs d'eau\"}\r\n|elif translate = \"Polymers\" : {set Translation to \"Polymères\"}\r\n|elif translate = \"Semidonductors\" : {set Translation to \"Semi-conducteurs\"}\r\n|elif translate = \"Meta-alloys\" : {set Translation to \"Méta-alliage\"}\r\n|elif translate = \"Supraconductors\" : {set Translation to \"Supraconducteurs\"}\r\n|elif translate = \"Bauxite\" : {set Translation to \"Bauxite\"}\r\n|elif translate = \"Bertrandite\" : {set Translation to \"Bertrandite\"}\r\n|elif translate = \"Coltan\" : {set Translation to \"Coltan\"}\r\n|elif translate = \"Cryolite\" : {set Translation to \"Cryolite\"}\r\n|elif translate = \"Gallite\" : {set Translation to \"Gallite \"}\r\n|elif translate = \"Indite\" : {set Translation to \"Indite\"}\r\n|elif translate = \"Lepidolite\" : {set Translation to \"Lépidolite\"}\r\n|elif translate = \"Rutile\" : {set Translation to \"Rutile\"}\r\n|elif translate = \"Uraninite\" : {set Translation to \"Uraninite\"}\r\n|elif translate = \"Progenitor Cells\" : {set Translation to \"Cellules souches\"}\r\n|elif translate = \"Agri-Medicines\" : {set Translation to \"Agro-médicaments\"}\r\n|elif translate = \"Basic Medicines\" : {set Translation to \"Médicaments de base\"}\r\n|elif translate = \"Advanced Medicines\" : {set Translation to \"Médicaments avancés\"}\r\n|elif translate = \"Performance Enhancers\" : {set Translation to \"Produits dopants\"}\r\n|elif translate = \"Combat Stabilisers\" : {set Translation to \"Stabilisateurs de combat\"}\r\n|elif translate = \"Aluminium\" : {set Translation to \"Aluminium\"}\r\n|elif translate = \"Silver\" : {set Translation to \"Argent\"}\r\n|elif translate = \"Beryllium\" : {set Translation to \"Béryllium\"}\r\n|elif translate = \"Cobalt\" : {set Translation to \"Cobalt\"}\r\n|elif translate = \"Copper\" : {set Translation to \"Cuivre\"}\r\n|elif translate = \"Gallium\" : {set Translation to \"Gallium\"}\r\n|elif translate = \"Indium\" : {set Translation to \"Indium\"}\r\n|elif translate = \"Lithium\" : {set Translation to \"Lithium\"}\r\n|elif translate = \"Osmium\" : {set Translation to \"Osmium\"}\r\n|elif translate = \"Gold\" : {set Translation to \"Or\"}\r\n|elif translate = \"Palladium\" : {set Translation to \"Palladium\"}\r\n|elif translate = \"Platine\" : {set Translation to \"Platine\"}\r\n|elif translate = \"Tantale\" : {set Translation to \"Tantale\"}\r\n|elif translate = \"Titanium\" : {set Translation to \"Titane\"}\r\n|elif translate = \"Uranium\" : {set Translation to \"Uranium\"}\r\n|elif translate = \"Hydrogen Fuel\" : {set Translation to \"Carburant à base dhydrogène\"}\r\n|elif translate = \"Explosives\" : {set Translation to \"Explosifs\"}\r\n|elif translate = \"Mineral Oil\" : {set Translation to \"Huile minérale\"}\r\n|elif translate = \"Pesticids\" : {set Translation to \"Pesticides\"}\r\n|elif translate = \"Cosmétics\" : {set Translation to \"Maquillages\"}\r\n|elif translate = \"Clothing\" : {set Translation to \"Vêtements\"}\r\n|elif translate = \"Domestic Appliances\" : {set Translation to \"équipements ménagers\"}\r\n|elif translate = \"Land Enrichment Systems\" : {set Translation to \"Systèmes denrichissement des sols\"}\r\n|elif translate = \"Monitoring Systems\" : {set Translation to \"Systèmes de surveillance\"}\r\n|elif translate = \"Advanced Catalysers\" : {set Translation to \"Catalyseurs complexes\"}\r\n|elif translate = \"H.E. Suits\" : {set Translation to \"Combinaison de protection\"}\r\n|elif translate = \"Resonating Separators\" : {set Translation to \"Séparateurs à résonance\"}\r\n|elif translate = \"Bioreducing Lichen\" : {set Translation to \"Lichen bioréducteur\"}\r\n|elif translate = \"Robotics\" : {set Translation to \"Robots\"}\r\n|elif translate = \"Leather\" : {set Translation to \"Cuir\"}\r\n|elif translate = \"Natural Fabric\" : {set Translation to \"Fibre textile naturelle\"}\r\n|elif translate = \"Syntethic Fabric\" : {set Translation to \"Tissu synthétique\"}\r\n|elif translate = \"Black Box\" : {set Translation to \"Boîte noire\"}\r\n|elif translate = \"Rare Artwork\" : {set Translation to \"œuvres dart\"}\r\n|elif translate = \"Military Plans\" : {set Translation to \"Plans militaires\"}\r\n|elif translate = \"Technical Blueprint\" : {set Translation to \"Plans technologiques\"}\r\n|elif translate = \"Trade Data\" : {set Translation to \"Données commerciales\"}\r\n|elif translate = \"Rebel Transmissions\" : {set Translation to \"Transmissions rebelles\"}\r\n|elif translate = \"Prototype Tech\" : {set Translation to \"Technologie prototype\"}\r\n|elif translate = \"Ancient Relic\" : {set Translation to \"Relique antique\"}\r\n|elif translate = \"Skimmer Components\" : {set Translation to \"Composants de protecteurs\"}\r\n|elif translate = \"Mineral Extractors\" : {set Translation to \"Extracteur de minerai\"}\r\n|elif translate = \"HN Shock Mount\" : {set Translation to \"Protection antichoc H P\"}\r\n|elif translate = \"Water Purifiers\" : {set Translation to \"Purificateur deau\"}\r\n|elif translate = \"Thermal Cooling Units\" : {set Translation to \"Unités de refroidissement\"}\r\n|elif translate = \"Marine Equipment\" : {set Translation to \"équipement aquatiques\"}\r\n|elif translate = \"Geological Equipment\" : {set Translation to \"équipement géologique\"}\r\n|elif translate = \"Computer Components\" : {set Translation to \"Composants dordinateur\"}\r\n|elif translate = \"Survival Equipment\" : {set Translation to \"équipement de survie\"}\r\n|elif translate = \"Muon Imager\" : {set Translation to \"dispositif dimagerie muonique\"}\r\n|elif translate = \"Consumer Technology\" : {set Translation to \"électronique grand public\"}\r\n|elif translate = \"Micro Controllers\" : {set Translation to \"Microcontrôleurs\"}\r\n|elif translate = \"Military Grade Fabrics\" : {set Translation to \"Tissus Militaires\"}\r\n|elif translate = \"Kamitra Cigars\" : {set Translation to \"Cigares de Kamitra\"}\r\n}\r\n{if Translation: {Translation} |else: {translate}}",
      "default": false,
      "name": "Translate Commodities",
      "description": "troduction des divers produits commerciaux"
    },
    "Translate economie": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set Translation to []}\r\n\r\n{ if translate = \"Industrial\" : {set Translation to \"l'industriel\"}\r\n|elif translate = \"Extraction\" : {set Translation to \"l'extraction\"}\r\n|elif translate = \"Agriculture\" : {set Translation to \"l'agriculture\"}\r\n|elif translate = \"Military\" : {set Translation to \"le militaire\"}\r\n|elif translate = \"Colony\" : {set Translation to \"la colonie\"}\r\n|elif translate = \"Rafinery\" : {set Translation to \"la rafinerie\"}\r\n|elif translate = \"Higt tech\" : {set Translation to \"la haute technologie\"}\r\n|elif translate = \"Terraforming\" : {set Translation to \"la terraformation\"}\r\n|elif translate = \"Tourism\" : {set Translation to \"le tourisme\"}\r\n|elif translate = \"None\" : {set Translation to \"aucune économie\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": true,
      "name": "Translate economie",
      "description": null
    },
    "Translate Element": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{_ set translate to \"Copper\"}\r\n\r\n{set Translation to []}\r\n\r\n{ if translate = \"Aluminum\" : {set Translation to \"Aluminium\"}\r\n|elif translate = \"Antimony\" : {set Translation to \"Antimoine\"}\r\n|elif translate = \"Argon\" : {set Translation to \"Argon\"}\r\n|elif translate = \"Arsenic\" : {set Translation to \"Arsenic\"}\r\n|elif translate = \"Barium\" : {set Translation to \"Barium\"}\r\n|elif translate = \"Beryllium\" : {set Translation to \"Beryllium\"}\r\n|elif translate = \"Bismuth\" : {set Translation to \"Bismuth\"}\r\n|elif translate = \"Boron\" : {set Translation to \"Bore\"}\r\n|elif translate = \"Bromine\" : {set Translation to \"Brome\"}\r\n|elif translate = \"Cadmium\" : {set Translation to \"Cadmium\"}\r\n|elif translate = \"Calcium\" : {set Translation to \"Calcium\"}\r\n|elif translate = \"Carbon\" : {set Translation to \"Carbone\"}\r\n|elif translate = \"Cerium\" : {set Translation to \"Cérium\"}\r\n|elif translate = \"Cesium\" : {set Translation to \"Caesium\"}\r\n|elif translate = \"Chlorine\" : {set Translation to \"Chlore\"}\r\n|elif translate = \"Chrome\" : {set Translation to \"Chrome\"}\r\n|elif translate = \"Cobalt\" : {set Translation to \"Cobalt\"}\r\n|elif translate = \"Copper\" : {set Translation to \"Cuivre\"}\r\n|elif translate = \"Dysprosium\" : {set Translation to \"Dysprosium\"}\r\n|elif translate = \"Erbium\" : {set Translation to \"Erbium\"}\r\n|elif translate = \"Europium\" : {set Translation to \"Europium\"}\r\n|elif translate = \"Fluorine\" : {set Translation to \"Fluor\"}\r\n|elif translate = \"Gadolinium\" : {set Translation to \"Gadolinium\"}\r\n|elif translate = \"Gallium\" : {set Translation to \"Gallium\"}\r\n|elif translate = \"Germanium\" : {set Translation to \"Germanium\"}\r\n|elif translate = \"Gold\" : {set Translation to \"Or\"}\r\n|elif translate = \"Hafnium\" : {set Translation to \"Haffnium\"}\r\n|elif translate = \"Helium\" : {set Translation to \"Hélium\"}\r\n|elif translate = \"Holmium\" : {set Translation to \"Holmium\"}\r\n|elif translate = \"Hydrogen\" : {set Translation to \"Hydrogène\"}\r\n|elif translate = \"Indium\" : {set Translation to \"Indium\"}\r\n|elif translate = \"Iodine\" : {set Translation to \"Iode\"}\r\n|elif translate = \"Iridium\" : {set Translation to \"Iridium\"}\r\n|elif translate = \"Iron\" : {set Translation to \"Fer\"}\r\n|elif translate = \"Krypton\" : {set Translation to \"Krypton\"}\r\n|elif translate = \"Lanthanum\" : {set Translation to \"Lanthane\"}\r\n|elif translate = \"Lead\" : {set Translation to \"Plomb\"}\r\n|elif translate = \"Lithium\" : {set Translation to \"Lithium\"}\r\n|elif translate = \"Lutetium\" : {set Translation to \"Lutétium\"}\r\n|elif translate = \"Magnesium\" : {set Translation to \"Magnésium\"}\r\n|elif translate = \"Manganese\" : {set Translation to \"Manganèse\"}\r\n|elif translate = \"Mercury\" : {set Translation to \"Mercure\"}\r\n|elif translate = \"Molybdenum\" : {set Translation to \"Molybdène\"}\r\n|elif translate = \"Neodymium\" : {set Translation to \"Néodyme\"}\r\n|elif translate = \"Neon\" : {set Translation to \"Néon\"}\r\n|elif translate = \"Nickel\" : {set Translation to \"Nickel\"}\r\n|elif translate = \"Niobium\" : {set Translation to \"Niobium\"}\r\n|elif translate = \"Nitrogen\" : {set Translation to \"Azote\"}\r\n|elif translate = \"Osmium\" : {set Translation to \"Osmium\"}\r\n|elif translate = \"Oxygen\" : {set Translation to \"Oxygène\"}\r\n|elif translate = \"Palladium\" : {set Translation to \"Palladium\"}\r\n|elif translate = \"Phosphorus\" : {set Translation to \"Phosphore\"}\r\n|elif translate = \"Platinum\" : {set Translation to \"Platine\"}\r\n|elif translate = \"Potassium\" : {set Translation to \"Potassium\"}\r\n|elif translate = \"Praseodymium\" : {set Translation to \"Praséodyme\"}\r\n|elif translate = \"Promethium\" : {set Translation to \"Prométhium\"}\r\n|elif translate = \"Rhenium\" : {set Translation to \"Rhénium\"}\r\n|elif translate = \"Rhodium\" : {set Translation to \"Rhodium\"}\r\n|elif translate = \"Rubidium\" : {set Translation to \"Rubidium\"}\r\n|elif translate = \"Ruthenium\" : {set Translation to \"Ruthénium\"}\r\n|elif translate = \"Samarium\" : {set Translation to \"Samarium\"}\r\n|elif translate = \"Scandium\" : {set Translation to \"Scandium\"}\r\n|elif translate = \"Selenium\" : {set Translation to \"Sélénium\"}\r\n|elif translate = \"Silicon\" : {set Translation to \"Silicium\"}\r\n|elif translate = \"Silver\" : {set Translation to \"Argent\"}\r\n|elif translate = \"Sodium\" : {set Translation to \"Sodium\"}\r\n|elif translate = \"Strontium\" : {set Translation to \"Strontium\"}\r\n|elif translate = \"Sulphur\" : {set Translation to \"Souffre\"}\r\n|elif translate = \"Tantalum\" : {set Translation to \"Tantale\"}\r\n|elif translate = \"Technetium\" : {set Translation to \"Technétium\"}\r\n|elif translate = \"Tellurium\" : {set Translation to \"Tellure\"}\r\n|elif translate = \"Terbium\" : {set Translation to \"Terbium\"}\r\n|elif translate = \"Thallium\" : {set Translation to \"Thallium\"}\r\n|elif translate = \"Thorium\" : {set Translation to \"Thorium\"}\r\n|elif translate = \"Thulium\" : {set Translation to \"Thulium\"}\r\n|elif translate = \"Tin\" : {set Translation to \"étain\"}\r\n|elif translate = \"Titanium\" : {set Translation to \"Titane\"}\r\n|elif translate = \"Tungsten\" : {set Translation to \"Tungstène\"}\r\n|elif translate = \"Uranium\" : {set Translation to \"Uranium\"}\r\n|elif translate = \"Vanadium\" : {set Translation to \"Vanadium\"}\r\n|elif translate = \"Xenon\" : {set Translation to \"Xénon\"}\r\n|elif translate = \"Ytterbium\" : {set Translation to \"Ytterbium\"}\r\n|elif translate = \"Yttrium\" : {set Translation to \"Yttrium\"}\r\n|elif translate = \"Zinc\" : {set Translation to \"Zinc\"}\r\n|elif translate = \"Zirconium\" : {set Translation to \"Zirconium\"}\r\n|elif translate = \"Silicate vapour\" : {set Translation to \"Vapeur de silicate\"}\r\n|elif translate = \"Water\" : {set Translation to \"Eau\"}\r\n|elif translate = \"Carbon dioxide\" : {set Translation to \"Dioxide de carbone\"}\r\n|elif translate = \"Galvanising Alloys\" : {set Translation to \"Alliage Galvanique\"}\r\n|elif translate = \"High Density Composites\" : {set Translation to \"Composites à haute densité\"}\r\n|elif translate = \"Mechanical Equipment\" : {set Translation to \"équipements mécanique\"}\r\n|elif translate = \"Shielding Sensors\" : {set Translation to \"Capteurs de bouclier\"}\r\n|elif translate = \"Phase Alloys\" : {set Translation to \"Alliage de phase\"}\r\n|elif translate = \"Precipitated Alloys\" : {set Translation to \"Alliages précipités\"}\r\n|elif translate = \"Compound Shielding\" : {set Translation to \"Protection composite\"}\r\n|elif translate = \"Shield Emitters\" : {set Translation to \"émetteurs de boucliers\"}\r\n|elif translate = \"Chemical Processors\" : {set Translation to \"Processeurs chimique\"}\r\n|elif translate = \"Heat Conduction Wiring\" : {set Translation to \"Cablage de conduction thermique\"}\r\n|elif translate = \"Heat Dispersion Plate\" : {set Translation to \"Plaque de dissipation thermique\"}\r\n|elif translate = \"Hybrid Capacitors\" : {set Translation to \"Condensateurs Hybrides\"}\r\n|elif translate = \"Grid Resistors\" : {set Translation to \"Résistances à grille\"}\r\n|elif translate = \"Salvaged Alloys\" : {set Translation to \"Alliages récupérés\"}\r\n|elif translate = \"Tempered Alloys\" : {set Translation to \"Alliages tempérés\"}\r\n|elif translate = \"Thermic Alloys\" : {set Translation to \"Alliages thermiques \"}\r\n|elif translate = \"Imperial Shielding\" : {set Translation to \"Blindage impérial\"}\r\n|elif translate = \"Heat Resistant Ceramics\" : {set Translation to \"Céramiques résistantes à la chaleur\"}\r\n|elif translate = \"Tagged Encryption Codes\" : {set Translation to \"Codes de cryptage marqués\"}\r\n|elif translate = \"Conductive Components\" : {set Translation to \"Composants conducteurs \"}\r\n|elif translate = \"Configurable Components\" : {set Translation to \"Composants configurables \"}\r\n|elif translate = \"Improvised Components\" : {set Translation to \"Composants improvisés \"}\r\n|elif translate = \"Mechanical Components\" : {set Translation to \"Composants mécaniques \"}\r\n|elif translate = \"Proprietary Composites\" : {set Translation to \"Composites brevetés \"}\r\n|elif translate = \"Compact Composites\" : {set Translation to \"Composites compacts \"}\r\n|elif translate = \"Core Dynamics Composites\" : {set Translation to \"Composites Dynamiques de base \"}\r\n|elif translate = \"Polymer Capacitors\" : {set Translation to \"Condensateurs en polymères \"}\r\n|elif translate = \"Hybrid Capacitors \" : {set Translation to \"Condensateurs hybrides \"}\r\n|elif translate = \"Basic Conductors\" : {set Translation to \"Conducteurs basiques \"}\r\n|elif translate = \"Conductive Ceramics\" : {set Translation to \"Conducteurs en céramiques \"}\r\n|elif translate = \"Heat Conductors\" : {set Translation to \"Conducteurs thermiques\"}\r\n|elif translate = \"Exquisite Focus Crystals\" : {set Translation to \"Cristaux de focalisation exquis \"}\r\n|elif translate = \"Flawed Focus Crystals\" : {set Translation to \"Cristaux de focalisation imparfaits \"}\r\n|elif translate = \"Refined Focus Crystals\" : {set Translation to \"Cristaux de focalisation raffinés\"}\r\n|elif translate = \"Focus Crystals\" : {set Translation to \"Cristaux de focalisation \"}\r\n|elif translate = \"Chemical Distillery\" : {set Translation to \"Distillerie chimique \"}\r\n|elif translate = \"Heat Exchangers\" : {set Translation to \"Échangeurs de chaleur \"}\r\n|elif translate = \"Worn Shield Emitters\" : {set Translation to \"Émetteurs de bouclier usés \"}\r\n|elif translate = \"Mechanical Scrap\" : {set Translation to \"Ferraille mécanique \"}\r\n|elif translate = \"Filament Composites\" : {set Translation to \"Filament composite \"}\r\n|elif translate = \"Pharmaceutical Isolators\" : {set Translation to \"Isolants pharmaceutiques \"}\r\n|elif translate = \"Chemical Manipulators\" : {set Translation to \"Manipulateur chimique\"}\r\n|elif translate = \"Conductive Polymers\" : {set Translation to \"Polymères conductifs \"}\r\n|elif translate = \"Proto Light Alloys\" : {set Translation to \"Proto-alliages légers \"}\r\n|elif translate = \"Proto Radiolic Alloys\" : {set Translation to \"Proto-alliages radiologiques \"}\r\n|elif translate = \"Proto Heat Radiators\" : {set Translation to \"Proto-radiateurs \"}\r\n|elif translate = \"Electrochemical Arrays\" : {set Translation to \"Réseaux électrochimique \"}\r\n|elif translate = \"Military Supercapacitors\" : {set Translation to \"Supercondensateurs militaires \"}\r\n|elif translate = \"Cristal Shards\" : {set Translation to \"Tessons de cristal \"}\r\n|elif translate = \"Heat Vanes\" : {set Translation to \"Vannes thermiques \"}\r\n|elif translate = \"Inconsistent Shield Soak Analysis\" : {set Translation to \"Analyse d'absorption de bouclier incohérente \"}\r\n|elif translate = \"Classified Scan Databanks\" : {set Translation to \"Banques de données classifiées \"}\r\n|elif translate = \"Anomalous Bulk Scan Data\" : {set Translation to \"Données de grandeur anormale\"}\r\n|elif translate = \"Aberrant Shield Pattern Analysis\" : {set Translation to \"Analyse de modèle de bouclier aberrante \"}\r\n|elif translate = \"Untypical Shield Scans\" : {set Translation to \"Analyses de bouclier atypique \"}\r\n|elif translate = \"Atypical Encryption Archives\" : {set Translation to \"Archives cryptées atypiques \"}\r\n|elif translate = \"Adaptive Encryptors Capture\" : {set Translation to \"Capture d'encrypteurs adaptatifs\"}\r\n|elif translate = \"Tagged Encryption Codes\" : {set Translation to \"Codes cryptés \"}\r\n|elif translate = \"Unidentified Scan Archives\" : {set Translation to \"Données de numérisation non identifiées\"}\r\n|elif translate = \"Divergent Scan Data\" : {set Translation to \"Données de numérisation divergentes \"}\r\n|elif translate = \"Abnormal Compact Emission Data\" : {set Translation to \"Données d'émissions anormales compactes\"}\r\n|elif translate = \"Decoded Emission Data\" : {set Translation to \"Données d'émissions décodées \"}\r\n|elif translate = \"Exceptional Scrambled Emission Data\" : {set Translation to \"Données d'émissions exceptionnellement brouillées\"}\r\n|elif translate = \"Unexpected Emission Data\" : {set Translation to \"Données d'émissions inattendues\"}\r\n|elif translate = \"Irregular Emission Data\" : {set Translation to \"Données d'émissions irrégulières \"}\r\n|elif translate = \"Atypical Disrupted Wake Echoes\" : {set Translation to \"Échos de sillages atypiques perturbés\"}\r\n|elif translate = \"Distorded Shield Cycle Recordings\" : {set Translation to \"Enregistrements de cycles de bouclier déformés\"}\r\n|elif translate = \"Datamined Wake Exceptions\" : {set Translation to \"Exploration de données de sillage anormales \"}\r\n|elif translate = \"Unusual Encrypted Files\" : {set Translation to \"Fichiers cryptés insolites \"}\r\n|elif translate = \"Peculiar Shield Frequency Data\" : {set Translation to \"Données particulières de fréquences de bouclier \"}\r\n|elif translate = \"Modified Consumer Firmware\" : {set Translation to \"Micrologiciel du consommateur modifié \"}\r\n|elif translate = \"Cracked Industrial Firmware\" : {set Translation to \"Micrologiciel industriel piraté \"}\r\n|elif translate = \"Modified Embedded Firmware\" : {set Translation to \"Micrologiciel intégré modifié \"}\r\n|elif translate = \"Specialised Legacy Firmware\" : {set Translation to \"Micrologiciel spécialisé périmé\"}\r\n|elif translate = \"Security Firmware Patch\" : {set Translation to \"Mise à jour de micrologiciel de sécurité\"}\r\n|elif translate = \"Strange Wake Solutions\" : {set Translation to \"Solutions de sillages anormales \"}\r\n|elif translate = \"Anomalous FSD Telemetry\" : {set Translation to \"Télémétrie F S D anormale \"}\r\n|elif translate = \"Eccentric Hyperspace Trajectories\" : {set Translation to \"Trajectoires d'hyperespace excentriques \"}\r\n|elif translate = \"Nanobreakers\" : {set Translation to \"Nanodestructeurs\"}\r\n|elif translate = \"Magnetic Emitter Coil\" : {set Translation to \"Bobine d'émission magnétique \"}\r\n|elif translate = \"Bromellite\" : {set Translation to \"Bromellite\"}\r\n|elif translate = \"Power Transfer Bus\" : {set Translation to \"Bus de transfert d'énergie\"}\r\n|elif translate = \"Hardware Diagnostic Sensor\" : {set Translation to \"Capteur de diagnostic matériel \"}\r\n|elif translate = \"Emergency Power Cells\" : {set Translation to \"Cellules d'énergie d'urgence \"}\r\n|elif translate = \"Exhaust Manifold\" : {set Translation to \"Collecteur d'échappement \"}\r\n|elif translate = \"CMM composite\" : {set Translation to \"Composites M M C \"}\r\n|elif translate = \"Power Converter\" : {set Translation to \"Convertisseur de puissance \"}\r\n|elif translate = \"Ion Distributor\" : {set Translation to \"Distributeur d'ions \"}\r\n|elif translate = \"Radiation Baffle\" : {set Translation to \"Écran anti-radiation \"}\r\n|elif translate = \"Energy Grid Assembly\" : {set Translation to \"Grille d'assemblage d'énergie \"}\r\n|elif translate = \"Heatsink Interlink\" : {set Translation to \"Interconnexion de dissipateur \"}\r\n|elif translate = \"Neofabric insulation\" : {set Translation to \"Isolant en néotextile\"}\r\n|elif translate = \"Insulating membrane\" : {set Translation to \"Membrane isolante \"}\r\n|elif translate = \"Microcontrollers\" : {set Translation to \"Microcontrôleurs \"}\r\n|elif translate = \"Articulator motors\" : {set Translation to \"Moteurs à articulation \"}\r\n|elif translate = \"Osmium\" : {set Translation to \"Osmium\"}\r\n|elif translate = \"Reinforced Mounting Plate\" : {set Translation to \"Plaque de montage renforcée \"}\r\n|elif translate = \"HN Shock Mount\" : {set Translation to \"Protection antichoc\"}\r\n|elif translate = \"Telemetry Suite\" : {set Translation to \"Suite de télémétrie\"}\r\n|elif translate = \"Modular Terminals\" : {set Translation to \"Terminaux modulaires\"}\r\n|elif translate = \"Micro-Weave Cooling Hoses\" : {set Translation to \"Tuyaux de refroidissement à microfilaments \"}\r\n|elif translate = \"Ancient Biological Data\" : {set Translation to \"Données biologique Antique\"}\r\n|elif translate = \"Ancient Cultural Data\" : {set Translation to \"Données culturelles antique\"}\r\n|elif translate = \"Ancient Historical Data\" : {set Translation to \"Données historiques antiques\"}\r\n|elif translate = \"Ancient Language Data\" : {set Translation to \"Données linguistiques antiques\"}\r\n|elif translate = \"Ancient Technological Data\" : {set Translation to \"Données technologiques antiques\"}\r\n|elif translate = \"Biotech Conductors\" : {set Translation to \"Conducteurs biotechnologiques\"}\r\n|elif translate = \"Chemical Storage Units\" : {set Translation to \"Unité de stockage chimique\"}\r\n|elif translate = \"Military Grade Alloys\" : {set Translation to \"Alliage de qualité militaire\"}\r\n|elif translate = \"Open Symmetric Keys\" : {set Translation to \"Clefs à ouverture symétriques\"}\r\n|elif translate = \"Polymer Capacitors\" : {set Translation to \"Condensateurs Polymères\"}\r\n|elif translate = \"Unknown Fragment\" : {set Translation to \"fragment inconnu\"}\r\n|elif translate = \"Unknown Ship Signature\" : {set Translation to \"signature de vaisseau inconnu\"}\r\n|elif translate = \"Unknown Wake Data\" : {set Translation to \"Données de sillages inconnu\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": false,
      "name": "Translate Element",
      "description": "TRaduction des éléments de l'anglais vers le français"
    },
    "Translate Government": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set Translation to []}\r\n\r\n{ if translate = \"Anarchy\" : {set Translation to \"Anarchie\"}\r\n|elif translate = \"Colony\" : {set Translation to \"colonie\"}\r\n|elif translate = \"Communism\" : {set Translation to \"Société Communiste\"}\r\n|elif translate = \"Confederacy\" : {set Translation to \"Confédération\"}\r\n|elif translate = \"Cooperative\" : {set Translation to \"Cooperative\"}\r\n|elif translate = \"Corporate\" : {set Translation to \"Corporation\"}\r\n|elif translate = \"Democracy\" : {set Translation to \"Démocratie\"}\r\n|elif translate = \"Dictatorship\" : {set Translation to \"Dictature\"}\r\n|elif translate = \"Feudal\" : {set Translation to \"Féodal\"}\r\n|elif translate = \"Imperial\" : {set Translation to \"Impérial\"}\r\n|elif translate = \"None\" : {set Translation to \"Aucun Gouvernement\"}\r\n|elif translate = \"Patronage\" : {set Translation to \"Sociéte clientéliste\"}\r\n|elif translate = \"Prison Colony\" : {set Translation to \"Colonie pénitencière\"}\r\n|elif translate = \"Theocracy\" : {set Translation to \"Théocratie\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": true,
      "name": "Translate Government",
      "description": null
    },
    "Translate Modules": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "\r\n{set Translation to []}\r\n\r\n{  \r\n if translate = \"Power Plant\"     : {set Translation to \"générateur\"}\r\n |elif translate = \"Thrusters\"     : {set Translation to \"propulseurs\"}\r\n |elif translate = \"Frame Shift Drive\"     : {set Translation to \"Réacteur F S D\"}\r\n |elif translate = \"Power Distributor\"     : {set Translation to \"répartiteur de puissance\"}\r\n |elif translate = \"Life Support\"     : {set Translation to \"système de survie\"}\r\n |elif translate = \"Sensors\"     : {set Translation to \"capteurs\"}\r\n |elif translate = \"Plasma Accelerator\"     : {set Translation to \"Accélérateur à plasma\"}\r\n |elif translate = \"Railgun\"     : {set Translation to \"Canon électrique\"}\r\n |elif translate = \"Pulse Laser\"     : {set Translation to \"laser à impulsion\"}\r\n |elif translate = \"Burst Laser\"     : {set Translation to \"laser en rafale\"}\r\n |elif translate = \"Mining Laser\"     : {set Translation to \"laser minier\"}\r\n |elif translate = \"Beam Laser\"     : {set Translation to \"Rayon laser\"}\r\n |elif translate = \"Missile Rack\"     : {set Translation to \"batterie de missiles\"}\r\n |elif translate = \"Canon\"     : {set Translation to \"Canon\"}\r\n |elif translate = \"Fragmentation Canon\"     : {set Translation to \"Canon à fragmentation\"}\r\n |elif translate = \"Mines Launcher\"     : {set Translation to \"lance-mines\"}\r\n |elif translate = \"Shock Mines Launcher\"     : {set Translation to \"Lance mines électriques\"}\r\n |elif translate = \"Multi-canon\"     : {set Translation to \"Multi-canon\"}\r\n |elif translate = \"Torpedo Pylon\"     : {set Translation to \"Tube lance-torpille\"}\r\n |elif translate = \"Electronic Countermesure\"     : {set Translation to \"Contre-mesures électroniques\"}\r\n |elif translate = \"Point Defense Turret\"     : {set Translation to \"Défense ponctuelle\"}\r\n |elif translate = \"Kill Warrant Scanner\"     : {set Translation to \"Détecteur davis de recherches\"}\r\n |elif translate = \"Frame Shift Wake Scanner\"     : {set Translation to \"Détecteur de sillage FSD\"}\r\n |elif translate = \"Cargo Scanner\"     : {set Translation to \"Détecteur de cargaison\"}\r\n |elif translate = \"Heat Sink Launcher\"     : {set Translation to \"éjecteur de dissipateur thermique\"}\r\n |elif translate = \"Shield Booster\"     : {set Translation to \"Survolteur de bouclier\"}\r\n |elif translate = \"Fuel Tank\"     : {set Translation to \"Réservoir de carburant\"}\r\n |elif translate = \"Bulkheads\"     : {set Translation to \"Coque\"}\r\n |elif translate = \"Vehicles Bay\"     : {set Translation to \"Baie des véhicules\"}\r\n |elif translate = \"Cargo Rack\"     : {set Translation to \"compartiment de soute\"}\r\n |elif translate = \"Collector Limpet Controller\"     : {set Translation to \"Contrôleur de collecteur\"}\r\n |elif translate = \"Hatch Breaker Limpet Controler\"     : {set Translation to \"Contrôle de patelle de perce soute\"}\r\n |elif translate = \"Prospector limpet controller\"     : {set Translation to \"contrôleur de prospecteur\"}\r\n |elif translate = \"Fuel Transfer Limpet Controler\"     : {set Translation to \"contrôleur de ravitailleur\"}\r\n |elif translate = \"Advanced Discovery Scanner\"     : {set Translation to \"Détecteur de découverte avancé\"}\r\n |elif translate = \"Intermediate Discovery Scanner\"     : {set Translation to \"Détecteur de découverte intermédiaire\"}\r\n |elif translate = \"Basic Discovery Scanner\"     : {set Translation to \"Détecteur de découverte simple\"}\r\n |elif translate = \"Detailed Surface Scanner\"     : {set Translation to \"Détecteur de surface détaillé\"}\r\n |elif translate = \"Shield Generator\"     : {set Translation to \"générateur de bouclier\"}\r\n |elif translate = \"Bi-wave Shield Generator\"     : {set Translation to \"générateur de bouclier entrelacé\"}\r\n |elif translate = \"FSD Interdictor\"     : {set Translation to \"Intercepteur de réacteurs FSD\"}\r\n |elif translate = \"Docking Computer\"     : {set Translation to \"Ordinateur d'appontage\"}\r\n |elif translate = \"Rafinery\"     : {set Translation to \"Raffinerie\"}\r\n |elif translate = \"Fuel Scoop\"     : {set Translation to \"Récupérateur de carburant\"}\r\n |elif translate = \"Shield Cell Bank\"     : {set Translation to \"Réserves de cellule d'énergie\"}\r\n |elif translate = \"Auto Field Maintenance Unit\"     : {set Translation to \"unité de maintenance de terrain auto\"}\r\n |elif translate = \"Advanced Accelerator\"     : {set Translation to \"Accélérateur perfectionné\"}\r\n |elif translate = \"Pack-Hound Rack\"     : {set Translation to \"Batterie essaim\"}\r\n |elif translate = \"Enforcer Cannon\"     : {set Translation to \"Canon exécuteur\"}\r\n |elif translate = \"Cytoscrambler\"     : {set Translation to \"Cytobrouilleur\"}\r\n |elif translate = \"Prismatic Shield Generator\"     : {set Translation to \"générateur de bouclier prismatique\"}\r\n |elif translate = \"Mining Lance\"     : {set Translation to \"lance de minage\"}\r\n |elif translate = \"Pulse Disruptor\"     : {set Translation to \"Laser foudroyant\"}\r\n |elif translate = \"Imperial Hammer\"     : {set Translation to \"marteleur imprérial\"}\r\n |elif translate = \"Pacifier Frag Cannon\"     : {set Translation to \"pacificateur à fragmentation\"}\r\n |elif translate = \"Retributor\"     : {set Translation to \"Rayon calorifique\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": true,
      "name": "Translate Modules",
      "description": "traduction des noms de modules en français"
    },
    "Translate State": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "{set Translation to []}\r\n\r\n{ if translate = \"Boom\" : {set Translation to \"éssor économique\"}\r\n|elif translate = \"Bust\" : {set Translation to \"Faillite\"}\r\n|elif translate = \"Famine\" : {set Translation to \"Famine\"}\r\n|elif translate = \"Civil Unrest\" : {set Translation to \"émeutes\"}\r\n|elif translate = \"Civil War\" : {set Translation to \"Guerre civile\"}\r\n|elif translate = \"Election\" : {set Translation to \"Elections\"}\r\n|elif translate = \"Expension\" : {set Translation to \"Politique expensionniste\"}\r\n|elif translate = \"Lockdown\" : {set Translation to \"loi martiale\"}\r\n|elif translate = \"Outbreak\" : {set Translation to \"épidémie\"}\r\n|elif translate = \"War\" : {set Translation to \"Guerre\"}\r\n|elif translate = \"None\" : {set Translation to \"Aucun\"}\r\n|elif translate = \"Retreat\" : {set Translation to \"Retraite\"}\r\n|elif translate = \"Investment\" : {set Translation to \"Investissements\"}\r\n}\r\n\r\n{if Translation: {Translation} |else: {translate}}",
      "default": true,
      "name": "Translate State",
      "description": null
    },
    "Undocked": {
      "enabled": true,
      "priority": 3,
      "responder": true,
      "script": "{OneOf(\"Le contrôle complet du vaisseai vous est rendu\", \"ecoutilles d'amarrage libérées\", \"Déconnecté du réseau local\")}.\r\n\r\n{set limpetcheck to F(\"Limpet check\")}\r\n\r\n{if limpetcheck:\r\n    {Pause(5000)}\r\n    {limpetcheck}\r\n}\r\n",
      "default": false,
      "name": "Undocked",
      "description": "Triggered when your ship undocks from a station or outpost"
    },
    "Zone Occupée": {
      "enabled": true,
      "priority": 3,
      "responder": false,
      "script": "\r\n{_ Remlok Industries}\r\n\r\nSystème : Bragurom Du.\r\nStation : Pellegrino Station.\r\nMessage : Bienvenue sur Bragurom Du, commandant. Rèmlok Industries y produit des matériaux et modules de très haute qualité, ainsi que des composants Rèmlok. Merci de suivre les règles locales. // Welcome on Bragurom Du commandeur. Rèmlok Industries produces high tech materials, modules, and Rèmlok components. Please, follow the local rules.",
      "default": true,
      "name": "Zone Occupée",
      "description": null
    }
  }
}
